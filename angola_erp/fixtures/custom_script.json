[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Item", 
  "modified": "2018-12-14 17:08:16.908951", 
  "name": "Item-Client", 
  "script": "frappe.provide(\"erpnext.item\");\r\n\r\nfrappe.ui.form.on(\"Item\", {\r\n\trefresh: function(frm) {\r\n\t\tif (frm.doc.has_variants) {\r\n\t\t\tfrm.add_custom_button(__(\"Make New Item Code\"), function() {\r\n\t\t\t\terpnext.item.make_variant_custom()\r\n\t\t\t}, \"icon-list\", \"btn-default\");\r\n\t\t}\r\n\t},\r\n});\r\n\r\n$.extend(erpnext.item, {\r\n\tget_hidden_fields: function(){\r\n\t\tvar ret = {}, cur_attrs = [];\r\n\t\tcur_frm.doc.attributes.forEach(function(d){\r\n\t\t\tcur_attrs.push(d.attribute);\r\n\t\t});\r\n\t\tfrappe.call({\r\n\t\t\t'async': false,\r\n\t\t\t'method': 'frappe.client.get_list',\r\n\t\t\t'args': {\r\n\t\t\t\t'doctype': 'Item Attribute',\r\n\t\t\t\t'filters': [\r\n\t\t\t\t    ['Item Attribute', 'hidden', '=', 1],\r\n\t\t\t\t\t['Item Attribute', 'name', 'in', cur_attrs]\r\n\t\t\t\t],\r\n\t\t\t\tfields: [\r\n\t\t\t\t\t'name', 'update_from', 'source', 'relation'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t'callback': function(res){\r\n\t\t\t\t(res.message || []).forEach(function(r){\r\n\t\t\t\t\tvar only_allowed, options = [] ;\r\n\t\t\t\t\tif (!ret.hasOwnProperty(r.update_from)){\r\n\t\t\t\t\t\tret[r.update_from] = {};\r\n\t\t\t\t\t\tret[r.update_from]['source'] = r.source;\r\n\t\t\t\t\t\tret[r.update_from]['options'] = {}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tret[r.update_from][r.name] = r.relation;\r\n\t\t\t\t\tret[r.name] = r.update_from;\r\n\t\t\t\t\tonly_allowed = frappe.utils.filter_dict(cur_frm.doc.item_variant_restrictions, {\"attribute\": r.name});\r\n\t\t\t\t\t(only_allowed || []).forEach(function(d){\r\n\t\t\t\t\t\toptions.push(d.attribute)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (!options.length){\r\n\t\t\t\t\t\tfrappe.call({\r\n\t\t\t\t\t\t\t'async': false,\r\n\t\t\t\t\t\t\t'method': 'frappe.client.get_list',\r\n\t\t\t\t\t\t\t'args': {\r\n\t\t\t\t\t\t\t\t'doctype': 'Item Attribute Value',\r\n\t\t\t\t\t\t\t\t'filters': [\r\n\t\t\t\t\t\t\t\t\t['Item Attribute Value', 'parent', '=', r.name]\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t'fields': ['attribute_value'],\r\n\t\t\t\t\t\t\t\t'limit_page_length': 500\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t'callback': function(res){\r\n\t\t\t\t\t\t\t\t(res.message || []).forEach(function(r){\r\n\t\t\t\t\t\t\t\t\toptions.push(r.attribute_value);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tret[r.update_from]['options'][r.name] = options;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn ret;\r\n\t},\r\n\tget_conversion_factors: function(from_uom, to_uom){\r\n\t\tvar ret;\r\n\t\tfrappe.call({\r\n\t\t\t'async': false,\r\n\t\t\t'method': 'rigpl_erpnext.rigpl_erpnext.item.get_uom_factors',\r\n\t\t\t'args':{\r\n\t\t\t\t'from_uom': from_uom,\r\n\t\t\t\t'to_uom': to_uom\r\n\t\t\t},\r\n\t\t\t'callback': function(res){\r\n\t\t\t\tret = res.message;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn ret;\r\n\t},\r\n\tmake_variant_custom: function(doc) {\r\n\t\tvar fields = [], hidden_fields = this.get_hidden_fields(doc);\r\n\t\tfor(var i=0;i< cur_frm.doc.attributes.length;i++){\r\n\t\t\tvar row = cur_frm.doc.attributes[i],\r\n\t\t\t    field, creator;\r\n\t\t\tif (!hidden_fields.hasOwnProperty(row.attribute)){\r\n\t\t\t\tfield = {\r\n\t\t\t\t\t\"label\": (row.attribute + \" (\"+ row.field_name + \")\"),\r\n\t\t\t\t\t\"fieldname\": row.attribute,\r\n\t\t\t\t\t\"reqd\": 1,\r\n\t\t\t\t\t\"fieldtype\": row.numeric_values ? \"Float\": \"Select\",\r\n\t\t\t\t\t\"description\": row.numeric_values ?  \"Min Value: \"+ row.from_range +\" , Max Value: \"+ row.to_range +\", in Increments of: \"+ row.increment : \"\"\r\n\t\t\t\t}\r\n\t\t\t\tif (field.fieldtype==='Select') {\r\n\t\t\t\t\tvar filters = [\r\n\t\t\t\t\t\t\t['parent', '=', row.attribute],\r\n\t\t\t\t\t], allowed = [], options = [null];\r\n\t\t\t\t\tfrappe.utils.filter_dict(cur_frm.doc.item_variant_restrictions, {'attribute': row.attribute}).forEach(function(d){\r\n\t\t\t\t\t\tif (d.allowed_values) allowed.push(d.allowed_values);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (allowed.length){\r\n\t\t\t\t\t\toptions = options.concat(allowed);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfrappe.call({\r\n\t\t\t\t\t\t\t'method': 'frappe.client.get_list',\r\n\t\t\t\t\t\t\t'async': false,\r\n\t\t\t\t\t\t\t'args': {\r\n\t\t\t\t\t\t\t\t'doctype': 'Item Attribute Value',\r\n\t\t\t\t\t\t\t\t'filters': filters,\r\n\t\t\t\t\t\t\t\t'fields': ['attribute_value']\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t'callback': function(res){\r\n\t\t\t\t\t\t\t\tres.message.forEach(function(d){\r\n\t\t\t\t\t\t\t\t\toptions.push(d.attribute_value);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfield.options = options;\r\n\t\t\t\t\tfields.push(field)\r\n\t\t\t\t}\r\n\t\t\t} else if (!hidden_fields[hidden_fields[row.attribute]].created){\r\n\t\t\t\tcreator = hidden_fields[row.attribute];\r\n\t\t\t\tfield = {\r\n\t\t\t\t\t'label': (creator + \" (\"+ row.field_name + \")\"),\r\n\t\t\t\t\t'fieldname': creator,\r\n\t\t\t\t\t'reqd': 1,\r\n\t\t\t\t\t'fieldtype': 'Data',\r\n\t\t\t\t};\r\n\t\t\t\thidden_fields[creator].created = true;\r\n\t\t\t\tfields.push(field)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar d = new frappe.ui.Dialog({\r\n\t\t\ttitle: __(\"Make Variant Custom\"),\r\n\t\t\tfields: fields\r\n\t\t});\r\n\t\t\r\n\t\tObject.keys(d.fields_dict).forEach(function(fieldname){\r\n\t\t\tif (d.fields_dict[fieldname].df.fieldtype!=='Data') return;\r\n\t\t\t\r\n\t\t\tvar field = d.fields_dict[fieldname],\r\n\t\t\t\ttarget = field.$input.parent(),\r\n\t\t\t    options = $('<ul class=\"dropdown-menu\"></ul>');\r\n\t\t\t\r\n\t\t\tObject.keys(hidden_fields[fieldname]).forEach(function(key){\r\n\t\t\t\tif (in_list(['created', 'source', 'options'], key)) return;\r\n\t\t\t\t\r\n\t\t\t\tvar option = $(format('<li><a data-option=\"{0}\">{0}</a></li>', [hidden_fields[fieldname][key]]));\r\n\t\t\t\toption.find('a').on('click', function(evt){\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tvar text = options.parent().find('button').text();\r\n\t\t\t\t\tif (text === $(this).text()) return;\r\n\t\t\t\t\toptions.parent().find('button').text($(this).text());\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (target.hasClass('ui-front')){\r\n\t\t\t\t\t\tfield.$input.autocomplete('destroy');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttarget.addClass('ui-front');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ((hidden_fields[fieldname].options[key]||'').length){\r\n\t\t\t\t\t\tfield.$input.autocomplete({\r\n\t\t\t\t\t\t\tminChars: 0,\r\n\t\t\t\t\t\t\tminLength: 0,\r\n\t\t\t\t\t\t\tsource: hidden_fields[fieldname].options[key],\r\n\t\t\t\t\t\t\tselect: function(event, ui){\r\n\t\t\t\t\t\t\t\tfield.$input.val(ui.item.value);\r\n\t\t\t\t\t\t\t\tfield.$input.trigger('change');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\toptions.append(option);\r\n\t\t\t});\r\n\t\t\t\t\r\n\t\t\t$(format('<div class=\"input-group-btn\">\\\r\n\t\t\t\t <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" data-fieldname=\"{1}\" aria-expanded=\"false\">{0}<span class=\"caret\"></span></button>\\\r\n\t\t\t  </div>', __([hidden_fields[fieldname].source, fieldname]))).append(options).prependTo(target);\r\n\t\t\t\r\n\t\t\ttarget.addClass('input-group');\r\n\t\t\t\r\n\t\t\tfield.$input.on('change', function(evt){\r\n\t\t\t\tif (!field.$input.val().length) return;\r\n\t\t\t\tvar uom = options.parent().find('button').text();\r\n\t\t\t\tif (uom===hidden_fields[fieldname].source){\r\n\t\t\t\t\tfield.$input.val(\"\");\r\n\t\t\t\t\tfrappe.throw(format('Select the \"{0}\" of the field \"{1}\"\", first!', [hidden_fields[fieldname].source, fieldname]))\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\td.set_primary_action(__(\"Make\"), function() {\r\n\t\t\tvar rules = {},\r\n\t\t\targs = d.get_values();\r\n\t\t\tif(!args) return;\r\n\t\t\t\r\n\t\t\tfrappe.utils.filter_dict(cur_frm.doc.item_variant_restrictions, {'is_numeric': 1}).forEach(function(d){\r\n\t\t\t\tif (!rules.hasOwnProperty(d.attribute)) rules[d.attribute] = [];\r\n\t\t\t\trules[d.attribute].push(d.rule);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tObject.keys(args).filter(function(key){ return hidden_fields.hasOwnProperty(key); }).forEach(function(key){\r\n\t\t\t\tvar val = args[key], base, targets = Object.keys(hidden_fields[key]).filter(function(k){ return !in_list(['created', 'source', 'options'], k)});\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbase = eval(val);\r\n\t\t\t\t} catch( e ){\r\n\t\t\t\t\tfrappe.throw(format('Failed to decode the value \"{0}\"', [val]));\r\n\t\t\t\t}\r\n\t\t\t\ttargets.forEach(function(tgt){\r\n\t\t\t\t\tvar uom = d.fields_dict[key].$input.parent().find('button').text(),\r\n\t\t\t\t\t\ttgt_uom = hidden_fields[key][tgt],\r\n\t\t\t\t\t    factors = erpnext.item.get_conversion_factors(uom, tgt_uom);\r\n\t\t\t\t\tif (uom === tgt_uom) {\r\n\t\t\t\t\t\targs[tgt] = val.indexOf('/') === -1 ? flt(val) : val;\r\n\t\t\t\t\t} else if (factors.rgt){\r\n\t\t\t\t\t\targs[tgt] = flt((base * factors.rgt).toFixed(frappe.defaults.get_global_default('float_precision')));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t    delete args[key];\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconsole.table(Object.keys(args).map(function(k){ return {'key': k, 'value': args[k]}}));\r\n\t\t\t//debugger;\r\n\t\t\tObject.keys(args).forEach(function(attribute){\r\n\t\t\t\tif (!rules.hasOwnProperty(attribute)) return;\r\n\t\t\t\tvar msg = [];\r\n\t\t\t\tfor (var i=0, j=rules[attribute].length; i < j; i++){\r\n\t\t\t\t\twith (args){\r\n\t\t\t\t\t\tout = eval(rules[attribute][i]);\r\n\t\t\t\t\t\tif (!out){\r\n\t\t\t\t\t\t\tmsg.push(format('Unable for ensure the rule \"{1}\" for the field \"{0}\"', [attribute, rules[attribute][i]]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (msg.length){\r\n\t\t\t\t\tfrappe.throw(msg.join('<br>'))\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tObject.keys(args).forEach(function(attribute){ args[attribute] = args[attribute] + '';});\r\n\t\t\tfrappe.call({\r\n\t\t\t\tmethod:\"erpnext.controllers.item_variant.get_variant\",\r\n\t\t\t\targs: {\r\n\t\t\t\t\t\"template\": cur_frm.doc.name,\r\n\t\t\t\t\t\"args\": args\r\n\t\t\t\t},\r\n\t\t\t\tcallback: function(r) {\r\n\t\t\t\t\t// returns variant item\r\n\t\t\t\t\tif (r.message) {\r\n\t\t\t\t\t\tvar variant = r.message;\r\n\t\t\t\t\t\tvar msgprint_dialog = frappe.msgprint(__(\"Item Variant {0} already exists with same attributes\",\r\n\t\t\t\t\t\t\t[repl('<a href=\"#Form/Item/%(item_encoded)s\" class=\"strong variant-click\">%(item)s</a>', {\r\n\t\t\t\t\t\t\t\titem_encoded: encodeURIComponent(variant),\r\n\t\t\t\t\t\t\t\titem: variant\r\n\t\t\t\t\t\t\t})]\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t\tmsgprint_dialog.hide_on_page_refresh = true;\r\n\t\t\t\t\t\tmsgprint_dialog.$wrapper.find(\".variant-click\").on(\"click\", function() {\r\n\t\t\t\t\t\t\td.hide();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\td.hide();\r\n\t\t\t\t\t\tfrappe.call({\r\n\t\t\t\t\t\t\tmethod:\"erpnext.controllers.item_variant.create_variant\",\r\n\t\t\t\t\t\t\targs: {\r\n\t\t\t\t\t\t\t\t\"item\": cur_frm.doc.name,\r\n\t\t\t\t\t\t\t\t\"args\": args\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tcallback: function(r) {\r\n\t\t\t\t\t\t\t\tvar doclist = frappe.model.sync(r.message);\r\n\t\t\t\t\t\t\t\tfrappe.set_route(\"Form\", doclist[0].doctype, doclist[0].name);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\td.show();\r\n\t},\r\n\ttoggle_attributes: function(frm) {\r\n\t\tfrm.toggle_display(\"attributes\", frm.doc.has_variants || frm.doc.variant_of);\r\n\t\tfrm.fields_dict.attributes.grid.toggle_reqd(\"attribute_value\", frm.doc.variant_of ? 1 : 0);\r\n\t\tfrm.fields_dict.attributes.grid.set_column_disp(\"attribute_value\", frm.doc.variant_of ? 1 : 0);\r\n\t}\r\n});\r\n\r\ncur_frm.cscript.custom_onload = function () {\r\n\tif (cur_frm.doc.has_variants == 1) {\r\n\t\tcur_frm.set_query('attribute', 'attributes', function(){\r\n\t\t\treturn {\r\n\t\t\t\tfilters: [\r\n\t\t\t\t\t['Item Attribute', 'virtual', '=', 0]\r\n\t\t\t\t]\r\n\t\t\t};\r\n\t\t});\r\n\t\tcur_frm.set_query('attribute', 'item_variant_restrictions', function(){\r\n\t\t\tvar attrs = []\r\n\t\t\tcur_frm.doc.attributes.forEach(function(row){\r\n\t\t\t\tattrs.push(row.attribute)\r\n\t\t\t});\r\n\t\t\treturn {'filters': [['Item Attribute', 'name', 'in', attrs]]}\r\n\t\t});\r\n\t\t\r\n\t}\r\n}\r\n//Below code would disable the attribute table after being saved.\r\nfrappe.ui.form.on(\"Item\", \"refresh\", function(frm){\r\n    frm.fields_dict.attributes.grid.df.read_only = frm.doc.__islocal ? false: true;\r\n\tfrm.fields_dict.attributes.grid.docfields.forEach(function(field){\r\n\t\tfield.read_only = frm.doc.__islocal ? false: true;\r\n\t});\r\n    frm.refresh_field(\"attributes\");\r\n});\r\n\r\nfrappe.ui.form.on(\"Item Variant Restrictions\", \"form_render\", function(frm, cdt, cdn){\r\n\tvar field = cur_frm.fields_dict.item_variant_restrictions.grid.grid_rows_by_docname[cdn].fields_dict.allowed_values;\r\n\t$(field.input_area).addClass('ui-front');\r\n\tfield.$input.autocomplete({\r\n\t\tminChars: 0,\r\n\t\tminLength: 0,\r\n\t\tsource: function(request, response){\r\n\t\t\tfrappe.call({\r\n\t\t\t\tmethod: 'frappe.client.get_list',\r\n\t\t\t\targs: {\r\n\t\t\t\t\tdoctype: 'Item Attribute Value',\r\n\t\t\t\t\tfilters: [\r\n\t\t\t\t\t\t['parent', '=', field.doc.attribute],\r\n\t\t\t\t\t\t['attribute_value', 'like', request.term + '%']\r\n\t\t\t\t\t],\r\n\t\t\t\t\tfields: ['attribute_value']\r\n\t\t\t\t},\r\n\t\t\t\tcallback: function(res){\r\n\t\t\t\t\tresponse($.map(res.message, function(d){ return d.attribute_value;}));\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tselect: function(event, ui){\r\n\t\t\tfield.$input.val(ui.item.value);\r\n\t\t\tfield.$input.trigger('change');\r\n\t\t}\r\n\t});\r\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Order", 
  "modified": "2018-12-14 17:08:16.749280", 
  "name": "Purchase Order-Client", 
  "script": "cur_frm.cscript.is_subcontracting = function(doc, cdt, cdn) {\r\n\tcur_frm.set_query(\"item_code\", \"items\", function(){\r\n\t\tif (cur_frm.doc.is_subcontracting == 1){\r\n\t\t\treturn{\r\n\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\r\n\t\t\t\tfilters:{ 'is_sub_contracted_item': 1 }\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn{\r\n\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\r\n\t\t\t\tfilters:{'is_purchase_item':1}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\nfrappe.ui.form.on(\"Purchase Order\", \"refresh\", function(frm) {\r\n\r\n// Get Items from Production Order\r\n// Get Items from Production Order\r\ncur_frm.add_custom_button(__('Production Order'),\r\n    function() {\r\n    var me = this;\r\n    this.dialog = new frappe.ui.Dialog({\r\n        title: \"Get Items from Production Order\",\r\n        fields: [\r\n            {\"fieldtype\": \"Link\", \"label\": __(\"Production Order\"), \"fieldname\": \"production_order\",\"options\":'Production Order',\"reqd\": 1, \r\n                get_query: function() { return {query: \"rigpl_erpnext.rigpl_erpnext.validations.purchase_order.get_pending_prd\"}},\r\n            },\r\n            {\"fieldtype\": \"Button\", \"label\": __(\"Get\"), \"fieldname\": \"get\"},\r\n            {\"fieldtype\": \"HTML\", \"fieldname\": \"production_order_items_details\"},\r\n        ],\r\n    });\r\n    me.dialog.show();\r\n    fd = this.dialog.fields_dict;\r\n    this.dialog.fields_dict.get.$input.click(function() {\r\n        value = me.dialog.get_values();\r\n\r\n    frappe.call({    \r\n        method: \"frappe.client.get_list\",\r\n           args: {\r\n            doctype: \"Production Order\",\r\n               fields: [\"production_item\", \"item_description \", \"sales_order\", \"so_detail\", \"qty\",\"fg_warehouse\",\"stock_uom\",\"name\"],\r\n               filters: { \"name\" : value.production_order\r\n                },\r\n            },\r\n            callback: function(res){\r\n            if(res && res.message){\r\n                    var row = frappe.model.add_child(cur_frm.doc, \"Purchase Order Item\", \"items\");\r\n                    row.qty = res.message[0]['qty'];\r\n\t\t\t\t\tif (cur_frm.doc.is_subcontracting == 1){\r\n\t\t\t\t\t\trow.subcontracted_item = res.message[0]['production_item'];\r\n\t\t\t\t\t} else{\r\n\t\t\t\t\t\trow.item_code = res.message[0]['production_item'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\trow.description = res.message[0]['item_description'];\r\n                    row.so_detail = res.message[0]['so_detail'];\r\n                    row.uom = res.message[0]['stock_uom'];\r\n                    row.stock_uom = res.message[0]['stock_uom'];\r\n                    row.conversion_factor = 1;\r\n                refresh_field(\"items\");\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    });\r\n\r\n    add_production_order_items_to_stock = function(){\r\n        var items_to_add = []\r\n        value = me.dialog.get_values();\r\n        $.each($(fd.production_order_items_details.wrapper).find(\".select:checked\"), function(name, item){\r\n            items_to_add.push($(item).val());\r\n        });\r\n        if(items_to_add.length > 0){\r\n            for(i=0;i<items_to_add.length;i++){\r\n                add_production_order_items(items_to_add,i)\r\n            }\r\n            me.dialog.hide()\r\n        }    \r\n        else{\r\n            msgprint(\"Select Item Before Add\")\r\n        }\r\n    }\r\n}, __(\"Add items from\"));\r\n\r\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Lead", 
  "modified": "2018-12-14 17:08:16.892550", 
  "name": "Lead-Client", 
  "script": "frappe.ui.form.on(\"Lead\", \"refresh\", function(frm) {\r\n    frm.add_custom_button(__(\"Sales Call\"), function() {\r\n        // When this button is clicked, do this\r\n\t\t\tfrappe.set_route(\"Form\", \"Sales Call Tool\",\r\n\t\t\t{\"document\": \"Lead\",\r\n\t\t\t \"lead\": frm.doc.name,\r\n\t\t\t \"date_of_communication\": Date()});\r\n\t\t\t \r\n    },  __(\"Add Communication for\"));\r\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Invoice", 
  "modified": "2018-02-02 19:31:20.567941", 
  "name": "Purchase Invoice-Client", 
  "script": "\ntaxavenda= cur_frm.call({method:\"angola_erp.util.cambios.cambios\",args:{\"fonte\":\"BNA\"}})\nlista_retencoes = cur_frm.call({method:\"angola_erp.util.angola.get_lista_retencoes\",args:{}})\nlista_retencao = cur_frm.call({method:\"angola_erp.util.angola.get_compras_taxa_retencao\",args:{}})\nlista_impostos = cur_frm.call({method:\"angola_erp.util.angola.get_taxa_ipc\",args:{}})\n\nvar temretencao = false \nvar temimpostoconsumo = false \nvar retencaofonte =0\nvar retencaopercentagem =0\nvar totalpararetencao = 0\nvar totalgeralimpostoconsumo = 0\nvar totalgeralretencaofonte = 0\nvar totalbaseretencaofonte = 0\nvar retencaofonteDESC\nvar totalservicos_retencaofonte =0\nvar totaldespesas_noretencaofonte =0\nvar supplier_retencaofonte = 0\nvar fornecedor_retencao =0\n\nfrappe.ui.form.on(\"Purchase Invoice\", {\n\tonload:\tfunction(frm) {\n\t\tcur_frm.set_df_property(\"taxa_cambio\",\"hidden\",false)\n\t},\n\trefresh: function(frm) {\n\t\t//cur_frm.toggle_enable(\"contra_valor\",false)\n\t\tcur_frm.toggle_enable(\"total_retencao_na_fonte\",false)\n\t\tcur_frm.toggle_enable(\"base_retencao_fonte\",false)\n\t\tcur_frm.toggle_enable(\"taxa_cambio\",false)\n\t\tif (fornecedor_retencao !=0){\n\t\t\tfrappe.show_alert(fornecedor_retencao[0].retencao_na_fonte)\n\t\t\tfrappe.show_alert(fornecedor_retencao[0].que_retencao)\n\t\t}\n\t}\n});\n\nfrappe.ui.form.on(\"Purchase Invoice\",\"validate\", function (frm) {\n\t//alert (\"Validar\")\n\n\n\t\n\t//Taxa de Cambio\n\tif (taxavenda.responseJSON != undefined && cur_frm.doc.taxa_cambio == 0){\n\t\tcur_frm.doc.taxa_cambio_bna = taxavenda.responseJSON.message[1]\n\t}\t\t\n});\n\nfrappe.ui.form.on(\"Purchase Invoice\",\"cambio_bna\", function(frm,cdt,cdn) {\n\n\t\tfrappe.call({\n\t\t\tasync: true,\n\t\t\tmethod: \"angola_erp.util.cambios.cambios\",\n\t\t\targs: {\n\t\t\t\t\"fonte\":\"BNA\"\t\t\t\t\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\ttaxavenda = r.message\n\t\t\t\tcur_frm.doc.taxa_cambio = taxavenda[1]\n\t\t\t\trefresh_field(\"taxa_cambio\")\n\t\t\t}\n\t\t});\n\n\n\n});\n\n\nfrappe.ui.form.on(\"Purchase Invoice\",\"supplier\", function(doc,cdt,cdn) {\n\t\t//var supp = locals[cdt][cdn]\n\t\t//cur_frm.set_df_property(\"taxa_cambio\",\"hidden\",false)\n\t\t//cur_frm.toggle_enable(\"taxa_cambio\",false)\n\t\t//Taxa de Cambio\n\t\tif (taxavenda.responseJSON != undefined && cur_frm.doc.taxa_cambio == 0){\n\t\t\tcur_frm.doc.taxa_cambio = taxavenda.responseJSON.message[1]\n\t\t\tcur_frm.refresh_fields('taxa_cambio')\n\t\t}\t\n\t\t//Verifica se o supplier tem Retencao Fonte\t\n\t\tif (cur_frm.doc.supplier){\n\t\t\tfrappe.call({\n\t\t\t\tasync: false,\n\t\t\t\tmethod: \"angola_erp.util.angola.get_supplier_retencao\",\n\t\t\t\targs: {\n\t\t\t\t\t'fornecedor':cur_frm.doc.supplier\t\t\t\t\n\t\t\t\t},\n\t\t\t\tcallback: function(r,rt) {\n\t\t\t\t\tif (r.message){\n\t\t\t\t\t\tfornecedor_retencao = r.message\n\t\t\t\t\t\tconsole.log (fornecedor_retencao)\n\t\t\t\t\t}else{\t\n\t\t\t\t\t\tfrappe.show_alert('Este Fornecedor nao tem Retencao na Fonte')\n\t\t\t\t\t\tfornecedor_retencao=0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\t\n\t\t\n\t\t\t\n\t\t\t//if (supp.retencao_na_fonte == 1){\n\t\t\t//\tsupplier_retencaofonte=1\n\t\t\t//}\n\t\t\n\t\t}\n\n});\n\t\ncur_frm.add_fetch('item_code','standard_rate','rate')\n//cur_frm.add_fetch('item_code','rate','standard_rate')\n\nfrappe.ui.form.on(\"Purchase Invoice Item\",\"item_code\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\t\n\ttotalpararetencao = d.amount\n\tif (lista_retencao.responseText.length ==2){\n\t\t\talert('Nao tem Retencao de Fonte criado nos Templates!!! ')\n\t\t\treturn\n\t}\n\tif (d.item_code){\n\t\tfrappe.show_alert(\"Total \" + d.amount,3)\t\n\t\tretencaofonte =0\n\t\tretencaopercentagem =0\n\t\tfrappe.model.with_doc(\"Item\", d.item_code, function() { \n\t\t\tvar dd = frappe.model.get_doc(\"Item\",d.item_code)\n\t\t\t//alert (\"rotina \", d.retencao_na_fonte)\n\t\t\tif (dd.retencao_na_fonte == 1){\n\t//\t\tif (d.que_retencao !=\"\"){\n\t\t\t\tfor (x = 0; x < lista_retencoes.responseJSON.message.length; x++){\n\t\t\t\t\tif (lista_retencoes.responseJSON.message[x].descricao == dd.que_retencao) {\n\t\t\t\t\t\tretencaopercentagem = lista_retencoes.responseJSON.message[x].percentagem\t\t\t\n\t\t\t\t\t\tretencaofonteDESC = dd.que_retencao\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}\t\n\t\t\t\t//Retencao from Taxe and Charges list\n\t\t\t\tretencaofonteDESC = lista_retencao.responseJSON.message[0].parent \n\t\t\t\t\n\t\t\t}\n\t\t\t//First load qtd will always be 1 \n\t\t\tif (d.amount ==0){\n\t\t\t\td.retencao_na_fonte = (dd.standard_rate * retencaopercentagem) / 100\n\t\t\t\tretencaofonte = (dd.standard_rate * retencaopercentagem) / 100\n\t\t\t\n\t\t\t}else{\n\t\t\t\td.retencao_na_fonte = (d.amount * retencaopercentagem) / 100\n\t\t\t\tretencaofonte = (d.amount * retencaopercentagem) / 100\n\t\t\t}\n\t\t\t\n\t\t\tif (retencaofonte != 0) {\n\t\t\t\tfrappe.show_alert(\"Retencao na fonte\",3)\t\n\t\t\t\tif (doc.fields_dict.taxes_and_charges.value == null || doc.fields_dict.taxes_and_charges.value == \"\"){\n\t\t\t\t\t//doc.set_value(\"taxes_and_charges\",retencaofonteDESC )\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t\n\t\t\t\t}\t\n\t\t\t}\t\t\t\n\t\t\tif (dd.imposto_de_consumo == 1){\n\t\t\t\t//Busca o Imposto from Sales Taxes Charges (account 34210000)\t\t\t\n\t\t\t\tfrappe.show_alert(\"Imposto de Consumo\",3)\t\t\t\t\t\n\t\t\t\td.imposto_de_consumo = (d.amount * 10) / 100\n\t\t\t\ttotalgeralimpostoconsumo += d.imposto_de_consumo \n\t\t\t\t\n\t\t\t\tif (doc.fields_dict.taxes_and_charges.value == null || doc.fields_dict.taxes_and_charges.value == \"\"){\n\t\t\t\t\t//Add Imposto e Consumo \n\t\t\t\t\t\n\t\t\t\t\tdoc.set_value(\"taxes_and_charges\", lista_impostos.responseJSON.message[0].parent )\n\t\t\t\t\tcur_frm.refresh_fields()\n\t\t\t\t\t//cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname[cdn].charge_type.refresh()\n\t\t\t\t\t// Now adds the Amount of the TAX based on the total of all itens \n\t\t\t\t\t//if(this.cur_frm.fields_dict[\"taxes\"].grid.get_field('charge_type')){\n\t\t\t\t\t//\talert(this.cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname['charge_type']) //get_field('charge_type'))\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\t\n\t\t\t\t\t//var tbl1 = cur_frm.doc.taxes || [];\n\t\t\t\t\t//alert (\"item code \" + tbl1.charge_type)\t\t\t\t\t\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,\"tax_amount\",totalgeralimpostoconsumo)  \n\t\t\t\t\t//} \t\t\n\t\t\t\t\t//cur_frm.cscript.validate_taxes_and_charges(\"Sales Taxes and Charges\", \"INVTD000005\" );\n\t\t\t\t\t\n//\t\t\t\t}else if (doc.fields_dict.taxes_and_charges.field[\"account_head\"] ==\"34210000\"){\n//\t\t\t\t\talert(\"AQUI Tem que ver\")\t\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\tvar me = this;\n\t\t\t\t\tvar tbl1 = this.cur_frm.doc[\"taxes\"];\n\t\t\t\t\t//alert(frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}))\n\t\t\t\t\t//frappe.model.set_value(frappe.utils.filter_dict(this.cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)  \n\t\t\t\t}\n\t\t\t\n\t\t\t}\t\n\t\n\n\t\t\t});\t\n\t}\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Program Enrollment", 
  "modified": "2018-01-19 14:27:03.091249", 
  "name": "Program Enrollment-Client", 
  "script": "escola_ginasio = cur_frm.call({method:\"angola_erp.util.angola.get_escola_ginasio\",args:{}})\nversao_erp = cur_frm.call({method:\"angola_erp.util.angola.get_versao_erp\",args:{}})\n\n//Still a Test to see if fit to a Gymnasium\nfrappe.ui.form.on(\"Program Enrollment\", \"student\", function(frm) {\n\tfrappe.show_alert (escola_ginasio.responseJSON.message,2);\n\t//if (cur_frm.doc.ficha == 'Ginasio'){\n\tif (escola_ginasio.responseJSON.message == 'Ginasio'){\n\t\tcur_frm.toggle_enable(\"transportation\",false)\t\n\t\tcur_frm.set_df_property(\"transportation\",\"hidden\",true)\t\n\t\t\n\t\tcur_frm.toggle_enable(\"boarding_student\",false)\t\n\t\tcur_frm.toggle_enable(\"school_house\",false)\t\n\t\tcur_frm.set_df_property(\"school_house\",\"hidden\",true)\t\n\n\t}\n});\n\nfrappe.ui.form.on(\"Program Enrollment\", {\n\tonload: function(frm){\n\t\tconsole.log('adfadfasdfas')\n\t\tconsole.log(escola_ginasio.readyState)\n\t\tconsole.log(escola_ginasio.responseJSON.message)\n\t\tif (escola_ginasio.readyState == 1){\n\t\t\tfrappe.call({\n\t\t\t\tasync: true,\n\t\t\t\tmethod:\"angola_erp.util.angola.get_escola_ginasio\",\n\t\t\t\targs:{},\n\t\t\t\tcallback: function(r){\n\t\t\t\t\tif (r.message){\n\t\t\t\t\t\tescola_ginasio.readyState = r.message;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t}else if (escola_ginasio.responseJSON.message == 'Ginasio'){\n\t\t\tcur_frm.toggle_enable(\"transportation\",false)\t\n\t\t\tcur_frm.set_df_property(\"transportation\",\"hidden\",true)\t\n\n\t\t\tcur_frm.toggle_enable(\"boarding_student\",false)\t\n\t\t\tcur_frm.toggle_enable(\"school_house\",false)\t\n\t\t\tcur_frm.set_df_property(\"school_house\",\"hidden\",true)\t\n\n\t\t}\n\n\t},\t\n    refresh: function(frm) {\n\t\tif (escola_ginasio.readyState != 1){\n\t\t\tconsole.log(frappe.model.get_value('Student',cur_frm.doc.student,'ficha'))\n\t\t\tfrappe.show_alert (escola_ginasio.responseJSON.message,2);\n\t\t\n\t\t\tif (escola_ginasio.responseJSON.message == 'Ginasio'){\n\t\t\t\tcur_frm.toggle_enable(\"transportation\",false)\t\n\t\t\t\tcur_frm.set_df_property(\"transportation\",\"hidden\",true)\t\n\n\t\t\t\tcur_frm.toggle_enable(\"boarding_student\",false)\t\n\t\t\t\tcur_frm.toggle_enable(\"school_house\",false)\t\n\t\t\t\tcur_frm.set_df_property(\"school_house\",\"hidden\",true)\t\n\n\t\t\t}\n\t\t}\t\n\t\tconsole.log('fees ', frm.doc.fees)\n\t\tconsole.log('cursos ', frm.doc.courses)\n\t\tconsole.log(versao_erp.responseText)\n\t\tif (frm.doc.program && frm.doc.fees.length == 0 && frm.doc.courses.length == 0 ){\n\t\t\tconsole.log('Chama o Program')\t\n\t\t\tfrm.events.program(frm);\t\n\t\t}\n    },\n\tprogram: function(frm) {\n\t\tif (frm.doc.program) {\n\t\t\t// Depends on the Version ... if V10 instead of Schools has to be Education\n\t\t\tconsole.log(versao_erp.responseText)\n\t\t\tif (versao_erp.responseJSON.message.startsWith(\"10\",0)) {\n\t\t\t\t//V10 ERPNEXT\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"erpnext.education.api.get_fee_schedule\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\t\"program\": frm.doc.program,\n\t\t\t\t\t\t//\"student_category\": frm.doc.student_category\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tif(r.message) {\n\t\t\t\t\t\t\tfee_sched = r.message\n\t\t\t\t\t\t\tfee_sched[0].due_date = frappe.datetime.add_days(frm.doc.enrollment_date,25)\n\t\t\t\t\t\t\tfrm.set_value(\"fees\" ,fee_sched);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfrm.events.get_courses(frm);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\t\n\t\t\t} else {\t\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"erpnext.schools.api.get_fee_schedule\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\t\"program\": frm.doc.program,\n\t\t\t\t\t\t//\"student_category\": frm.doc.student_category\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tif(r.message) {\n\t\t\t\t\t\t\tfee_sched = r.message\n\t\t\t\t\t\t\tfee_sched[0].due_date = frappe.datetime.add_days(frm.doc.enrollment_date,25)\n\t\t\t\t\t\t\tfrm.set_value(\"fees\" ,fee_sched);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//frm.set_value(\"fees\" ,r.message);\n\n\t\t\t\t\t\t\tfrm.events.get_courses(frm);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\t\n\t\t}\n\t},\n\n\tstudent_category: function() {\n\t\tfrappe.ui.form.trigger(\"Program Enrollment\", \"program\");\n\t},\n\n\tget_courses: function(frm) {\n\t\tif (cur_frm.doc.program){\n\t\t\tfrm.set_value(\"courses\",[]);\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"angola_erp.util.angola.get_cursos\",\n\t\t\t\t//doc:frm.doc,\n\t\t\t\targs: {\n\t\t\t\t\t\t'programa':cur_frm.doc.program \n\t\t\t\t},\t\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(r.message) {\n\t\t\t\t\t\tfrm.set_value(\"courses\", r.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\t\n\t}\t\n});\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Student Applicant", 
  "modified": "2017-09-20 12:53:57.450670", 
  "name": "Student Applicant-Client", 
  "script": "escola_ginasio = cur_frm.call({method:\"angola_erp.util.angola.get_escola_ginasio\",args:{}})\nfrappe.ui.form.on(\"Student Applicant\", {\n\tonload:\tfunction(frm) {\n\t\tfrm.set_value(\"nationality\",'Angolana');\n\t}\n\n});\n\nfrappe.ui.form.on(\"Student Applicant\", {\n    refresh: function(frm) {\n\t\tif (escola_ginasio.readyState != 1){\n\t\t\tfrappe.show_alert (escola_ginasio.responseJSON.message,2);\n\t\t\tconsole.log (escola_ginasio.responseJSON.message,2);\n\t\t\tif (escola_ginasio.responseJSON.message == 'Ginasio'){\n\t\t\t\tcur_frm.toggle_enable(\"section_break_21\",false)\t\n\t\t\t\tcur_frm.set_df_property(\"section_break_21\",\"hidden\",true)\t\n\t\t\t\tcur_frm.toggle_enable(\"section_break_20\",false)\t\n\t\t\t\tcur_frm.set_df_property(\"section_break_20\",\"hidden\",true)\t\n\t\t\t\tcur_frm.set_df_property(\"siblings\",\"hidden\",true)\t\n\t\t\t\t\n\t\t\t\tcur_frm.toggle_enable(\"paid\",false)\t//If Ginasio cannot create applicant and paid ...\n\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(frm.doc.application_status== \"Approved\" && frm.doc.docstatus== 1 ) {\n\t\t\tfrm.clear_custom_buttons()\t//Clear the existing one .. so ours can be added.\n\t\t\tfrm.add_custom_button(__(\"Enroll\"), function() {\n\t\t\t\tfrm.events.enroll(frm)\n\t\t\t}).addClass(\"btn-primary\");\n\t\t\tfrm.add_custom_button(__(\"Reject\"), function() {\n\t\t\t\tfrm.set_value(\"application_status\", \"Rejected\");\n\t\t\t\tfrm.save_or_update();\n\t\t\t}, 'Actions');\n\t\t}\t\t\n\t},\n\t\n\tenroll: function(frm) {\n\t\tfrappe.model.open_mapped_doc({\n\t\t\tmethod: \"angola_erp.util.angola.estudante_enroll\",\n\t\t\tfrm: frm\n\t\t})\n\t},\n\t\n\n});\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Student", 
  "modified": "2017-07-25 14:58:29.437496", 
  "name": "Student-Client", 
  "script": "escola_ginasio = cur_frm.call({method:\"angola_erp.util.angola.get_escola_ginasio\",args:{}})\n\n//Still a Test to see if fit to a Gymnasium\nfrappe.ui.form.on(\"Student\", \"first_name\", function(frm) {\n\tshow_alert (escola_ginasio.responseJSON.message,2);\n\t//if (cur_frm.doc.ficha == 'Ginasio'){\n\tif (escola_ginasio.responseJSON.message == 'Ginasio'){\n\t\tcur_frm.toggle_enable(\"section_break_18\",false)\t\n\t\tcur_frm.set_df_property(\"section_break_18\",\"hidden\",true)\t\n\t\tcur_frm.toggle_enable(\"section_break_20\",false)\t\n\t\tcur_frm.set_df_property(\"section_break_20\",\"hidden\",true)\t\n\t\tcur_frm.set_df_property(\"siblings\",\"hidden\",true)\t\n\n\t}\n});\n\nfrappe.ui.form.on(\"Student\", {\n    refresh: function(frm) {\n\tif (escola_ginasio.readyState != 1){\n\t\tshow_alert (escola_ginasio.responseJSON.message,2);\n\t\tif (escola_ginasio.responseJSON.message == 'Ginasio'){\n\t\t\tcur_frm.toggle_enable(\"section_break_18\",false)\t\n\t\t\tcur_frm.set_df_property(\"section_break_18\",\"hidden\",true)\t\n\t\t\tcur_frm.toggle_enable(\"section_break_20\",false)\t\n\t\t\tcur_frm.set_df_property(\"section_break_20\",\"hidden\",true)\t\n\t\t\tcur_frm.set_df_property(\"siblings\",\"hidden\",true)\t\n\n\t\t}\n\t}\n\t}\n\n});\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Account", 
  "modified": "2016-12-01 17:17:27.206256", 
  "name": "Account-Client", 
  "script": "frappe.ui.form.on('Account', {\n\t\n\trefresh: function(frm) {\n\t\t//initially to see if Description show on the GRID ....\n\t},\n\n\tonrender: function(node) {\n\t\tvar dr_or_cr = node.data.balance < 0 ? \"Cr\" : \"Dr\";\n\t\tif (node.data && node.data.balance!==undefined) {\n\t\t\t\tif (node.data.descricao !==null) $('<span class=\"descricao-area pull-center text-muted small\">'\n\t\t\t\t+ \" - \" + node.data.descricao\n\t\t\t\t+ '</span>').insertBefore(node.$ul);\n\t\t\t$('<span class=\"balance-area pull-right text-muted small\">'\n\t\t\t\t+ (node.data.balance_in_account_currency ?\n\t\t\t\t\t(format_currency(Math.abs(node.data.balance_in_account_currency),\n\t\t\t\t\t\tnode.data.account_currency) + \" / \") : \"\")\n\t\t\t\t+ format_currency(Math.abs(node.data.balance), node.data.company_currency)\n\t\t\t\t+ \" \" + dr_or_cr\n\t\t\t\t+ '</span>').insertBefore(node.$ul);\t\t}\n\t},\n\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Invoice", 
  "modified": "2018-08-14 11:48:40.663950", 
  "name": "Sales Invoice-Client", 
  "script": "// Copyright (c) 2017, HELKyds lda. and contributors\n// For license information, please see license.txt\n// Modified 14/08/2018\n\ntaxavenda= cur_frm.call({method:\"angola_erp.util.cambios.cambios\",args:{\"fonte\":\"BNA\"}})\nlista_retencoes = cur_frm.call({method:\"angola_erp.util.angola.get_lista_retencoes\",args:{}})\nlista_retencao = cur_frm.call({method:\"angola_erp.util.angola.get_vendas_taxa_retencao\",args:{}})\nlista_impostos = cur_frm.call({method:\"angola_erp.util.angola.get_taxa_ipc\",args:{}})\n\nvar temretencao = false \nvar temimpostoconsumo = false \nvar retencaofonte =0\nvar retencaopercentagem =0\nvar totalpararetencao = 0\nvar totalgeralimpostoconsumo = 0\nvar totalgeralretencaofonte = 0\nvar totalbaseretencaofonte = 0\nvar retencaofonteDESC\nvar totalservicos_retencaofonte =0\nvar totaldespesas_noretencaofonte =0\nvar conta_rendimento = \"\"\n\nfrappe.ui.form.on(\"Sales Invoice\", {\n\tonload:\tfunction(frm) {\n\t\tcur_frm.set_df_property(\"taxa_cambio\",\"hidden\",false)\n\t\t//if(frm.doc.__islocal) {\n\t\t//\tcur_frm.doc.update_stock = 1\n\t\t//}\t\n\t\t\n//\t\tfrappe.form.link_formatters['items'] = function(value, doc) {\n//\t\t\tif(doc.item_code && doc.item_code !== value) {\n//\t\t\t\treturn value + ': ' + doc.item_name;\n//\t\t\t} else {\n//\t\t\t\treturn value;\n//\t\t\t}\n//\t\t}\n\n\t},\n\trefresh: function(frm) {\n\t\t//cur_frm.toggle_enable(\"contra_valor\",false)\n\t\tcur_frm.toggle_enable(\"total_retencao_na_fonte\",false)\n\t\tcur_frm.toggle_enable(\"taxa_cambio\",false)\n\t\t\n\t\t\n\t\tif (!cur_frm.doc.propina){\n\t\t\tcur_frm.set_df_property(\"propina\",\"hidden\",true)\t\n\t\t}else{\n\t\t\tcur_frm.set_df_property(\"propina\",\"hidden\",false)\t\t\t\t\n\t\t}\n\t\tif (flt(cur_frm.doc.outstanding_amount)==0 && cur_frm.doc.propina && cur_frm.doc.docstatus == 1){\n\t\t\tfrappe.show_alert('Pagamento feito ...')\n\t\t\t\tfrappe.call({\n\t\t\t\tasync: false,\n\t\t\t\tmethod: \"angola_erp.util.angola.set_fee_pago\",\n\t\t\t\targs: {\n\t\t\t\t\t\"propina\":cur_frm.doc.propina,\n\t\t\t\t\t\"fatura\":cur_frm.doc.name},\n//\t\t\t\t\tcallback: function(r) {\n//\t\t\t\t\t\ttaxavenda = r.message\n//\t\t\t\t\t\tcur_frm.doc.taxa_cambio = taxavenda[1]\n//\t\t\t\t\t\trefresh_field(\"taxa_cambio\")\n//\t\t\t\t\t}\n\t\t\t\n\t\t\t\t});\n\t\t}\n\t\tcur_frm.set_indicator_formatter('item_code',\n\t\t\tfunction(doc){\n\t\t\t\tconsole.log(doc.item_code + ' ' + doc.qty + ' ' + doc.actual_qty)\n\t\t\t\tif (doc.docstatus == 0 && cur_frm.doc.update_stock == 1){\n\t\t\t\t//if (doc.actual_qty != 0 && doc.docstatus == 0){\n\t\t\t\t\treturn(doc.qty <= doc.actual_qty) ? \"green\" : \"red\"\n\t\t\t\t}\n\t\t\t},\t\n\t\t\tfunction (doc) {\n\t\t\t\tif(doc && doc.item_name && doc.item_name !== doc.item_code) {\n\t\t\t\t\treturn doc.item_code ? doc.item_code + ': ' + doc.item_name : doc.item_name;\n\t\t\t\t} else {\n\t\t\t\t\treturn doc.item_code;\n\t\t\t\t}\n\t\t\t}\t\t\t\t\n\t\t)\t\n\t\t\n\n\n\t\t\n\t},\t\n\n\n\n});\n\nfrappe.ui.form.on(\"Sales Invoice\",\"company\", function (frm) {\n\t//check if 61 account or 62\n\tfrappe.model.get_value('Company', {'name': cur_frm.doc.company}, 'default_income_account',\n\t\tfunction(d) {\n\t\t\t//console.log(d)\n\t\t\tconta_rendimento = d\n\t\t\tif (conta_rendimento.default_income_account.startsWith(\"611\",0)) {\n\t\t\t\tcur_frm.doc.update_stock = 1\n\t\t\t\n\t\t\t} else {\n\t\t\t\tcur_frm.doc.update_stock = 0\t\t\n\t\t\t}\t\n\n\t\t})\n\n});\t\n  \nfrappe.ui.form.on(\"Sales Invoice\",\"validate\", function (frm) {\n\t//alert (\"Validar\")\n\t//Taxa de Cambio\n\tif (taxavenda.responseJSON != undefined && cur_frm.doc.taxa_cambio == 0){\n\t\tcur_frm.doc.taxa_cambio_bna = taxavenda.responseJSON.message[1]\n\t}\t\t\n\t\n\t\t\n});\n\ncur_frm.cscript.custom_charge_type = function(doc,cdt,cd){\n\t\t\talert (\"custom Charge_type\")\n\t\t\tvar d = locals[cdt][cd]\t\n\t\t\tif (d.charge_type == 'On Net Total') {\t\t\t\n\t\t\t\tfrappe.model.set_value(cdt,cd,'rate', 6.5)\n\t\t\t\tfrappe.model.set_value(cdt,cd,'account_head','34140000-I Industrial - Retencao A Justificar Clientes') \n\t\t\t\t\n\t\t\t}\n}\n\n\n\t\nfrappe.ui.form.on(\"Sales Invoice\",\"cambio_bna\", function(frm,cdt,cdn) {\n\tfrappe.call({\n\t\tasync: true,\n\t\tmethod: \"angola_erp.util.cambios.cambios\",\n\t\targs: {\n\t\t\t\"fonte\":\"BNA\"},\n\t\t\tcallback: function(r) {\n\t\t\t\ttaxavenda = r.message\n\t\t\t\tcur_frm.doc.taxa_cambio = taxavenda[1]\n\t\t\t\trefresh_field(\"taxa_cambio\")\n\t\t\t}\n\t\n\t});\n});\n\t\t\ncur_frm.cscript.custom_validate = function(doc, dt, dn) {\n\tif (doc.docstatus == 0){\n\t\tif (frappe.datetime.get_day_diff(new Date(), frappe.datetime.str_to_obj(doc.transaction_date)) > 0 && doc.order_type == \"Sales\") {\n\t\t\t//Due to normal clients this have to be removed for now....\n\t\t\t//validated = false;\n\t\t\t//msgprint(\"Data de Ordem de Venda nao pode ser anterior de hoje\"); // or any other message you want..\n\t\t}\n\t\t//Melhor estar no Refresh ... \n//\t\tcur_frm.set_indicator_formatter('item_code',\n//\t\t\tfunction(doc){\n//\t\t\t\tconsole.log(doc.item_code + ' ' + doc.qty + ' ' + doc.actual_qty)\n//\t\t\t\tif (doc.actual_qty != 0 && doc.docstatus == 0){\n//\t\t\t\t\treturn(doc.qty <= doc.actual_qty) ? \"green\" : \"red\"\n//\t\t\t\t}\n//\t\t})\t\n\t\t\n\t}\n}\nfrappe.ui.form.on(\"Sales Invoice\",\"customer\", function(doc,cdt,cdn) {\n\t\t//cur_frm.set_df_property(\"taxa_cambio\",\"hidden\",false)\n\t\t//cur_frm.toggle_enable(\"taxa_cambio\",false)\n\t\t//Taxa de Cambio\n\t\tif (taxavenda.responseJSON != undefined && cur_frm.doc.taxa_cambio == 0){\n\t\t\tcur_frm.doc.taxa_cambio = taxavenda.responseJSON.message[1]\n\t\t\tcur_frm.refresh_fields('taxa_cambio')\n\t\t}\t\t\n});\n\ncur_frm.add_fetch('item_code','standard_rate','rate')\n\nfrappe.ui.form.on(\"Sales Invoice Item\",\"item_code\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\t\n\ttotalpararetencao = d.amount\n\t\n\t\n\tif (d.item_code){\n\t\tfrappe.show_alert(\"Total \" + d.amount,3)\t\n\t\tconsole.log ('BATCH ', d.batch_no)\n\t\tretencaofonte =0\n\t\tretencaopercentagem =0\n\t\tfrappe.model.with_doc(\"Item\", d.item_code, function() { \n\t\t\tvar dd = frappe.model.get_doc(\"Item\",d.item_code)\n\t//\t\talert (\"rotina \", d.retencao_na_fonte)\n\t\t\tconsole.log(d.actual_qty)\n\t\t\tfrappe.show_alert('qtd em stock ' + dd.total_projected_qty,2)\n\t\t\tif (dd.retencao_na_fonte == 1){\n\t//\t\tif (d.que_retencao !=\"\"){\n\t\t\t\tfor (x = 0; x < lista_retencoes.responseJSON.message.length; x++){\n\t\t\t\t\tif (lista_retencoes.responseJSON.message[x].descricao == dd.que_retencao) {\n\t\t\t\t\t\tretencaopercentagem = lista_retencoes.responseJSON.message[x].percentagem\t\t\t\n\t\t\t\t\t\tretencaofonteDESC = dd.que_retencao\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}\t\n\t\t\t\t//Retencao from Taxe and Charges list\n\t\t\t\tretencaofonteDESC = lista_retencao.responseJSON.message[0].parent \n\t\t\t\t\n\t\t\t}\n\t\t\t//First load qtd will always be 1 \n\t\t\tif (d.amount ==0){\n\t\t\t\td.retencao_na_fonte = (dd.standard_rate * retencaopercentagem) / 100\n\t\t\t\tretencaofonte = (dd.standard_rate * retencaopercentagem) / 100\n\t\t\t\n\t\t\t}else{\n\t\t\t\td.retencao_na_fonte = (d.amount * retencaopercentagem) / 100\n\t\t\t\tretencaofonte = (d.amount * retencaopercentagem) / 100\n\t\t\t}\n\t\t\t\n\t\t\tif (retencaofonte != 0) {\n\t\t\t\tshow_alert(\"Retencao na fonte\",3)\t\n\t\t\t\tif (doc.fields_dict.taxes_and_charges.value == null || doc.fields_dict.taxes_and_charges.value == \"\"){\n\t\t\t\t\t//doc.set_value(\"taxes_and_charges\",retencaofonteDESC )\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t\n\t\t\t\t}\t\n\t\t\t}\t\t\t\n\t\t\tif (dd.imposto_de_consumo == 1){\n\t\t\t\t//Busca o Imposto from Sales Taxes Charges (account 34210000)\t\t\t\n\t\t\t\tfrappe.show_alert(\"Imposto de Consumo\",3)\t\t\t\t\t\n\t\t\t\td.imposto_de_consumo = (d.amount * 10) / 100\n\t\t\t\ttotalgeralimpostoconsumo += d.imposto_de_consumo \n\t\t\t\t\n\t\t\t\tif (doc.fields_dict.taxes_and_charges.value == null || doc.fields_dict.taxes_and_charges.value == \"\"){\n\t\t\t\t\t//Add Imposto e Consumo \n\t\t\t\t\t\n\t\t\t\t\tdoc.set_value(\"taxes_and_charges\", lista_impostos.responseJSON.message[0].parent )\n\t\t\t\t\tcur_frm.refresh_fields()\n\t\t\t\t\t//cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname[cdn].charge_type.refresh()\n\t\t\t\t\t// Now adds the Amount of the TAX based on the total of all itens \n\t\t\t\t\t//if(this.cur_frm.fields_dict[\"taxes\"].grid.get_field('charge_type')){\n\t\t\t\t\t//\talert(this.cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname['charge_type']) //get_field('charge_type'))\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\t\n\t\t\t\t\t//var tbl1 = cur_frm.doc.taxes || [];\n\t\t\t\t\t//alert (\"item code \" + tbl1.charge_type)\t\t\t\t\t\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,\"tax_amount\",totalgeralimpostoconsumo)  \n\t\t\t\t\t//} \t\t\n\t\t\t\t\t//cur_frm.cscript.validate_taxes_and_charges(\"Sales Taxes and Charges\", \"INVTD000005\" );\n\t\t\t\t\t\n//\t\t\t\t}else if (doc.fields_dict.taxes_and_charges.field[\"account_head\"] ==\"34210000\"){\n//\t\t\t\t\talert(\"AQUI Tem que ver\")\t\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\tvar me = this;\n\t\t\t\t\tvar tbl1 = this.cur_frm.doc[\"taxes\"];\n\t\t\t\t\t//alert(frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}))\n\t\t\t\t\t//frappe.model.set_value(frappe.utils.filter_dict(this.cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)  \n\t\t\t\t}\n\t\t\t\n\t\t\t}\t\n\t\n\n\t\t});\t\n\n\t}\n});\n\ncur_frm.cscript.amount = function(doc,cdt,cdn){\n//frappe.ui.form.on(\"Sales Invoice Item\",\"amount\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\talert(\"Total \" + d.amount)\n\t\n}\n//);\n\n\n\nfrappe.ui.form.on(\"taxes\",\"charge_type\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\talert(\"AQUII\")\n\t\n\t\n\t\n});\n\ncur_frm.cscript.tax_amount = function(doc,cdt,cdn) {\n\talert(\"tax Amount\")\n\t\n}\n\ncur_frm.cscript.charge_type = function(doc,cdt,cdn) {\n\talert(\"Charge\")\n\t\n}\n\n\n\nvar itens_ = function(frm,cdt,cdn){\n\tfrappe.model.with_doc(frm, cdt, function() { \n\t\tvar d = frappe.model.get_doc(frm,cdt)\n//\t\talert (\"rotina \", d.retencao_na_fonte)\n\t\tif (d.retencao_na_fonte == 1){\n\t\t\tretencaofonte = d.que_retencao\n\t\t\tfrappe.show_alert(\"tem retencao na fonte: \" + d.que_retencao,3)\t\n\t\t\tfrappe.show_alert('quantidade ' + d.qty,2)\t\n\n\t\t\t\n//\t\t\tfrappe.model.with_doc(\"Retencoes\", d.que_retencao, function() { \t\n//\t\t\t\tvar retencao = frappe.model.get_doc(\"Retencoes\", d.que_retencao)\n//\t\t\t\tretencaopercentagem = retencao.percentagem\n//\t\t\t\talert(\"Percentagem \" + totalpararetencao + \" \" + retencao.percentagem)\n//\t\t\t});\t\n\t\t\t\n\t\t}\n\n\t});\n}\n\n\n\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Customer", 
  "modified": "2018-12-14 17:08:16.871470", 
  "name": "Customer-Client", 
  "script": "cur_frm.add_fetch('charge','letter_head','letter_head');\r\nfrappe.ui.form.on(\"Customer\", \"refresh\", function(frm) {\r\n    frm.add_custom_button(__(\"Sales Call\"), function() {\r\n        // When this button is clicked, do this\r\n\t\t\tfrappe.set_route(\"Form\", \"Sales Call Tool\",\r\n\t\t\t{\"document\": \"Customer\",\r\n\t\t\t \"customer\": frm.doc.name,\r\n\t\t\t \"date_of_communication\": Date()});\r\n\r\n    },  __(\"Add Communication for\"));\r\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Order", 
  "modified": "2017-10-17 11:21:10.055537", 
  "name": "Sales Order-Client", 
  "script": "\ntaxavenda= cur_frm.call({method:\"angola_erp.util.cambios.cambios\",args:{\"fonte\":\"BNA\"}})\nlista_retencoes = cur_frm.call({method:\"angola_erp.util.angola.get_lista_retencoes\",args:{}})\nlista_retencao = cur_frm.call({method:\"angola_erp.util.angola.get_vendas_taxa_retencao\",args:{}})\nlista_impostos = cur_frm.call({method:\"angola_erp.util.angola.get_taxa_ipc\",args:{}})\n\nvar temretencao = false \nvar temimpostoconsumo = false \nvar retencaofonte =0\nvar retencaopercentagem =0\nvar totalpararetencao = 0\nvar totalgeralimpostoconsumo = 0\nvar totalgeralretencaofonte = 0\nvar totalbaseretencaofonte = 0\nvar retencaofonteDESC\nvar totalservicos_retencaofonte =0\nvar totaldespesas_noretencaofonte =0\n\n\nfrappe.ui.form.on(\"Sales Order\", {\n\tonload:\tfunction(frm) {\n\t\tcur_frm.set_df_property(\"taxa_cambio\",\"hidden\",false)\n\t},\n\trefresh: function(frm) {\n\t\t//cur_frm.toggle_enable(\"contra_valor\",false)\n\t\tcur_frm.toggle_enable(\"total_retencao_na_fonte\",false)\n\t\tcur_frm.toggle_enable(\"taxa_cambio\",false)\n\n\t\tcur_frm.set_indicator_formatter('item_code',\n\t\t\tfunction(doc){\n\t\t\t\tconsole.log(doc.item_code + ' ' + doc.qty + ' ' + doc.actual_qty)\n\t\t\t\tif (doc.docstatus == 0){\n\t\t\t\t//if (doc.actual_qty != 0 && doc.docstatus == 0){\n\t\t\t\t\treturn(doc.qty <= doc.actual_qty) ? \"green\" : \"red\"\n\t\t\t\t}\n\t\t\t},\t\n\t\t\tfunction (doc) {\n\t\t\t\tif(doc && doc.item_name && doc.item_name !== doc.item_code) {\n\t\t\t\t\treturn doc.item_code ? doc.item_code + ': ' + doc.item_name : doc.item_name;\n\t\t\t\t} else {\n\t\t\t\t\treturn doc.item_code;\n\t\t\t\t}\n\t\t\t}\t\t\t\t\n\t\t)\t\n\n\t}\n});\n\nfrappe.ui.form.on(\"Sales Order\",\"validate\", function (frm) {\n\t//alert (\"Validar\")\n\n\n\t\n\t//Taxa de Cambio\n\tif (taxavenda.responseJSON != undefined && cur_frm.doc.taxa_cambio == 0){\n\t\tcur_frm.doc.taxa_cambio_bna = taxavenda.responseJSON.message[1]\n\t}\t\t\n});\n\nfrappe.ui.form.on(\"Sales Order\",\"cambio_bna\", function(frm,cdt,cdn) {\n\n\t\tfrappe.call({\n\t\t\tasync: true,\n\t\t\tmethod: \"angola_erp.util.cambios.cambios\",\n\t\t\targs: {\n\t\t\t\t\"fonte\":\"BNA\"\t\t\t\t\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\ttaxavenda = r.message\n\t\t\t\tcur_frm.doc.taxa_cambio = taxavenda[1]\n\t\t\t\trefresh_field(\"taxa_cambio\")\n\t\t\t}\n\t\t});\n\n\n\n});\n\n\ncur_frm.cscript.custom_validate = function(doc, dt, dn) {\n\n    if (doc.docstatus == 0){\n\n\t\tif (frappe.datetime.get_day_diff(new Date(), frappe.datetime.str_to_obj(doc.transaction_date)) > 0 && doc.order_type == \"Sales\") {\n\t\t\t//Due to normal clients this have to be removed for now....\n\t\t\t//validated = false;\n\n\t\t\t//msgprint(\"Data de Ordem de Venda nao pode ser anterior de hoje\"); // or any other message you want..\n\n\t\t}\n\n\t}\t\n\n};\n\nfrappe.ui.form.on(\"Sales Order\",\"customer\", function(doc,cdt,cdn) {\n\t\t//cur_frm.set_df_property(\"taxa_cambio\",\"hidden\",false)\n\t\t//cur_frm.toggle_enable(\"taxa_cambio\",false)\n\t\t//Taxa de Cambio\n\t\tif (taxavenda.responseJSON != undefined && cur_frm.doc.taxa_cambio == 0){\n\t\t\tcur_frm.doc.taxa_cambio = taxavenda.responseJSON.message[1]\n\t\t\tcur_frm.refresh_fields('taxa_cambio')\n\t\t}\t\t\n});\n\t\ncur_frm.add_fetch('item_code','standard_rate','rate')\n//cur_frm.add_fetch('item_code','rate','standard_rate')\n\nfrappe.ui.form.on(\"Sales Order Item\",\"item_code\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\t\n\ttotalpararetencao = d.amount\n\n\tif (d.item_code){\n\t\tfrappe.show_alert(\"Total \" + d.amount,3)\t\n\t\tretencaofonte =0\n\t\tretencaopercentagem =0\n\t\tfrappe.model.with_doc(\"Item\", d.item_code, function() { \n\t\t\tvar dd = frappe.model.get_doc(\"Item\",d.item_code)\n\t//\t\talert (\"rotina \", d.retencao_na_fonte)\n\t\t\tif (dd.retencao_na_fonte == 1){\n\t//\t\tif (d.que_retencao !=\"\"){\n\t\t\t\tfor (x = 0; x < lista_retencoes.responseJSON.message.length; x++){\n\t\t\t\t\tif (lista_retencoes.responseJSON.message[x].descricao == dd.que_retencao) {\n\t\t\t\t\t\tretencaopercentagem = lista_retencoes.responseJSON.message[x].percentagem\t\t\t\n\t\t\t\t\t\tretencaofonteDESC = dd.que_retencao\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}\t\n\t\t\t\t//Retencao from Taxe and Charges list\n\t\t\t\tretencaofonteDESC = lista_retencao.responseJSON.message[0].parent \n\t\t\t\t\n\t\t\t}\n\t\t\t//First load qtd will always be 1 \n\t\t\tif (d.amount ==0){\n\t\t\t\td.retencao_na_fonte = (dd.standard_rate * retencaopercentagem) / 100\n\t\t\t\tretencaofonte = (dd.standard_rate * retencaopercentagem) / 100\n\t\t\t\n\t\t\t}else{\n\t\t\t\td.retencao_na_fonte = (d.amount * retencaopercentagem) / 100\n\t\t\t\tretencaofonte = (d.amount * retencaopercentagem) / 100\n\t\t\t}\n\t\t\t\n\t\t\tif (retencaofonte != 0) {\n\t\t\t\tfrappe.show_alert(\"Retencao na fonte\",3)\t\n\t\t\t\tif (doc.fields_dict.taxes_and_charges.value == null || doc.fields_dict.taxes_and_charges.value == \"\"){\n\t\t\t\t\t//doc.set_value(\"taxes_and_charges\",retencaofonteDESC )\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t\n\t\t\t\t}\t\n\t\t\t}\t\t\t\n\t\t\tif (dd.imposto_de_consumo == 1){\n\t\t\t\t//Busca o Imposto from Sales Taxes Charges (account 34210000)\t\t\t\n\t\t\t\tfrappe.show_alert(\"Imposto de Consumo\",3)\t\t\t\t\t\n\t\t\t\td.imposto_de_consumo = (d.amount * 10) / 100\n\t\t\t\ttotalgeralimpostoconsumo += d.imposto_de_consumo \n\t\t\t\t\n\t\t\t\tif (doc.fields_dict.taxes_and_charges.value == null || doc.fields_dict.taxes_and_charges.value == \"\"){\n\t\t\t\t\t//Add Imposto e Consumo \n\t\t\t\t\t\n\t\t\t\t\tdoc.set_value(\"taxes_and_charges\", lista_impostos.responseJSON.message[0].parent )\n\t\t\t\t\tcur_frm.refresh_fields()\n\t\t\t\t\t//cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname[cdn].charge_type.refresh()\n\t\t\t\t\t// Now adds the Amount of the TAX based on the total of all itens \n\t\t\t\t\t//if(this.cur_frm.fields_dict[\"taxes\"].grid.get_field('charge_type')){\n\t\t\t\t\t//\talert(this.cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname['charge_type']) //get_field('charge_type'))\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\t\n\t\t\t\t\t//var tbl1 = cur_frm.doc.taxes || [];\n\t\t\t\t\t//alert (\"item code \" + tbl1.charge_type)\t\t\t\t\t\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,\"tax_amount\",totalgeralimpostoconsumo)  \n\t\t\t\t\t//} \t\t\n\t\t\t\t\t//cur_frm.cscript.validate_taxes_and_charges(\"Sales Taxes and Charges\", \"INVTD000005\" );\n\t\t\t\t\t\n//\t\t\t\t}else if (doc.fields_dict.taxes_and_charges.field[\"account_head\"] ==\"34210000\"){\n//\t\t\t\t\talert(\"AQUI Tem que ver\")\t\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\tvar me = this;\n\t\t\t\t\tvar tbl1 = this.cur_frm.doc[\"taxes\"];\n\t\t\t\t\t//alert(frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}))\n\t\t\t\t\t//frappe.model.set_value(frappe.utils.filter_dict(this.cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)  \n\t\t\t\t}\n\t\t\t\n\t\t\t}\t\n\t\n\n\t\t\t});\t\n\t}\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Communication", 
  "modified": "2018-12-14 17:08:16.925932", 
  "name": "Communication-Client", 
  "script": "$.extend(frappe.views.CommunicationComposer, {\r\n\t\r\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Salary Slip", 
  "modified": "2017-10-13 00:25:26.108826", 
  "name": "Salary Slip-Client", 
  "script": "// Copyright (c) 2016, HELKyds lda. and contributors\n// For license information, please see license.txt\n//IRT_INSS v2\n\n\nvar irt=0;\nvar inss=0;\nvar salario = 0;\nvar numero_faltas =0;\nvar valor_inicio =0;\nvar valor_fim = 0;\nvar valor_percentual = 0;\nvar parcela_fixa = 0;\n\nlista_irt = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_lista_irt\",args:{}})\ncontador = 0\n\n\nfrappe.ui.form.on('Salary Slip', {\n\n\trefresh: function(frm) {\n\n\t\t//Get Salario\n\t\t//cur_frm.toggle_enable(\"salario_iliquido\",false)\t\t\n\t\t\n\t\tconsole.log (\"Salary Slip REFRESH \", contador )\n\t\tcontador += 1\n\t\tvar tbl1 = frm.doc.earnings || [];\n\n//\t\tvar tbl2 = frm.doc.deductions || [];\n\n\t\tinss_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_inss\",args:{}})\t\n\n\t\tif (frm.doc.employee != undefined){\n\t\t\tif (numero_faltas.readyState == 4){\n\t\t\t\tif (oldemp != frm.doc.employee || oldmonth != moment(frm.doc.start_date).month()+1 || oldyear != moment(frm.doc.start_date).year()){\n\t\t\t\t\tnumero_faltas = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_faltas\",args:{\"emp\":frm.doc.employee,\"mes\":moment(frm.doc.start_date).month()+1, \"ano\":moment(frm.doc.start_date).year(),\"empresa\":frm.doc.company}}) \n\t\t\t\t\toldemp = frm.doc.employee\n\t\t\t\t\toldmonth = moment(frm.doc.start_date).month()+1\n\t\t\t\t\toldyear = moment(frm.doc.start_date).year()\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tcur_frm.doc.numero_de_faltas = numero_faltas.responseJSON.message[0]\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tnumero_faltas = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_faltas\",args:{\"emp\":frm.doc.employee, \"mes\":moment(frm.doc.start_date).month()+1, \"ano\":moment(frm.doc.start_date).year(), \"empresa\":frm.doc.company}}) \n\t\t\t\toldemp = frm.doc.employee\n\t\t\t\toldmonth = moment(frm.doc.start_date).month()+1\n\t\t\t\toldyear = moment(frm.doc.start_date).year()\n\t\t\t\t\n\t\t\t}\n\t\t\tconsole.log (\"Salary Slip FALTAS\")\n\t\t}else if (numero_faltas !=0){\n\t\t\tif (numero_faltas.readyState != 1){\n\t\t\t\tcur_frm.doc.numero_de_faltas = numero_faltas.responseJSON.message[0]\n\t\t\t}\n\t\t\tconsole.log (\"Salary Slip FALTAS 1\")\n\t\t}\n\t\t\n\t\tfor(var i = 0; i < tbl1.length; i++){\n\n\t\t\tif (tbl1[i].salary_component == \"Salario Base\" || tbl1[i].salary_component == \"Basic\" && tbl1[i].amount != 0){\n\n\t\t\t\tif (cur_frm.doc.salario_iliquido == 0 ){\n\t\t\t\t\tsalario = tbl1[i].amount;\t\n\t\t\t\t}else{\n\t\t\t\t\tsalario = cur_frm.doc.salario_iliquido;\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (lista_irt.readyState !=1){\n\t\t\t\t\tfor (var x =0; x < lista_irt.responseJSON.message.length; x++){\n\t\t\t\t\t\t//valor_inicio <= %(start)s and valor_fim >=%(start)s\n\t\t\t\t\t\tif (lista_irt.responseJSON.message[x].valor_inicio <= salario && lista_irt.responseJSON.message[x].valor_fim >= salario){\n\t\t\t\t\t\t\tvalor_inicio = lista_irt.responseJSON.message[x].valor_inicio\n\t\t\t\t\t\t\tvalor_fim = lista_irt.responseJSON.message[x].valor_fim\n\t\t\t\t\t\t\tvalor_percentual = lista_irt.responseJSON.message[x].valor_percentual\n\t\t\t\t\t\t\tparcela_fixa = lista_irt.responseJSON.message[x].parcela_fixa\t\n\t\t\t\t\t\t\tx = lista_irt.responseJSON.message.length +1 \n\t\n\t\t\t\t\t\t}else if (lista_irt.responseJSON.message[x].valor_fim >= salario){\n\t\t\t\t\t\t\tvalor_inicio = lista_irt.responseJSON.message[x].valor_inicio\n\t\t\t\t\t\t\tvalor_fim = lista_irt.responseJSON.message[x].valor_fim\n\t\t\t\t\t\t\tvalor_percentual = lista_irt.responseJSON.message[x].valor_percentual\n\t\t\t\t\t\t\tparcela_fixa = lista_irt.responseJSON.message[x].parcela_fixa\t\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tconsole.log (\"NAO PROCESSA AQUI !!!!\")\n//\t\t\t\t\tirt_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_irt\",args:{\"start\":salario}})\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\t\n\t\tif (numero_faltas.responseJSON != undefined){\n\t\t\tfrappe.show_alert(\"Numero de Faltas \" + numero_faltas.responseJSON.message[0])\n\t\t\t//frappe.show_alert(numero_faltas.valueOf.length)\n\t\t}\n\t\t\n\t\tif(!frm.doc.__islocal) {\n\n\t\t\tcur_frm.add_custom_button(__('Calcular IRT & INSS'),cur_frm.cscript['calcular_irt_inss'], \"icon-list\", \"btn-default\");\n\n\n\t\t}\n\n\n\t},\n\n\t\n\n\t\n\n});\n\n\n\n\ncur_frm.cscript.calcular_irt_inss = function(doc,cdt,cdn){\n\n\n//\t\t\tcur_frm.add_custom_button(__('Calcular IRT & INSS'),function(doc, cdt, cdn) {\n\n\tvar tbl1 = cur_frm.doc.earnings || [];\n\tvar tbl2 = cur_frm.doc.deductions || [];\n\n\tfor(var i = 0; i < tbl1.length; i++){\n\n\t\tif (tbl1[i].salary_component == \"Salario Base\" || tbl1[i].salary_component == \"Basic\" && tbl1[i].amount != 0){\n\n\t\t\tif (valor_fim !=0){\n\t\t\t\tirt = flt(salario) - valor_inicio;\n\n\t\t\t\tirt = (irt * valor_percentual/ 100) + parcela_fixa;\n\t\t\t\n\t\t\t}else if (irt_valor.responseJSON.message[0].valor_inicio !=undefined){\n\n\t\t\t\tirt = flt(salario) - irt_valor.responseJSON.message[0].valor_inicio;\n\n\t\t\t\tirt = (irt * irt_valor.responseJSON.message[0].valor_percentual/ 100) + irt_valor.responseJSON.message[0].parcela_fixa;\n\n\t\t\t}else{\n\n\t\t\t\tirt = flt(salario) - irt_valor.responseJSON.message[0][0];\n\n\t\t\t\tirt = (irt * irt_valor.responseJSON.message[0][2]/ 100) + irt_valor.responseJSON.message[0][3];\t\t\t\t\t\t\t\n\n\t\t\t}\t\t\t\t\t\t\t\n\n\t\t}\t\t\t\t\t\n\n\t}\n\n\ttotaldeducoes = 0\n\tfor(var j = 0; j < tbl2.length; j++){\n\n\t\tif (tbl2[j].salary_component == \"IRT\" ){\n\n\t\t\tirt_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_ded\",args:{\"ded\":tbl2[j].name,\"d_val\":irt}});\n\n\t\t}else if (tbl2[j].salary_component == \"INSS\" ){\t\n\n\t\t\tif (inss_valor.responseJSON.message !=undefined){\n\n\t\t\t\t//inss_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_inss\",args:{}})\t\n\n\t\t\t\tinss_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_ded\",args:{\"ded\":tbl2[j].name,\"d_val\":flt(salario)*inss_valor.responseJSON.message}});\n\n\t\t\t}else{\n\n\t\t\t\talert(\"INSS\")\n\n\t\t\t}\n\t\t}else if (tbl2[j].salary_component == \"Faltas Injustificadas\" ){\t\n\t\t\t//so pode ser feito no SALARY SLIP due to the Month being processed.\n\t\t\t//alert(total_days_in_month - numero_faltas.responseJSON.message[0])\n\t\t\t\t//desconto_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_ded\",args:{\"ded\":tbl2[j].name,\"d_val\":(flt(salario)/26)*numero_faltas.responseJSON.message[0]}});\n\n\t\t\t//OUTRA Formula para desconto de Faltas SB/26/2+SB/26*numero_faltas\n\t\t\tdesconto_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_ded\",args:{\"ded\":tbl2[j].name,\"d_val\":(((flt(salario)/26)/2)+(flt(salario)/26))*numero_faltas.responseJSON.message[0]}});\n\n\t\t\t//if leave without pay 0 than payment days less numero_faltas otherwise working days - leave without - numero_faltas\n\t\t\tif (cur_frm.doc.leave_without_pay ==0){\n\t\t\t\tpagamentodias = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_salary_slip_pay_days\",args:{\"emp\":cur_frm.doc.employee, \"mes\":moment(frm.doc.start_date).month()+1, \"ano\":moment(frm.doc.start_date).year(), \"pag\":(cur_frm.doc.total_days_in_month - numero_faltas.responseJSON.message[0]) }});\n\t\t\t\tfrappe.model.set_value(cur_frm.doc.doctype,cur_frm.doc.name,'payment_days',cur_frm.doc.total_days_in_month  - numero_faltas.responseJSON.message[0]) \n\t\t\t}else{\n\t\t\t\tpagamentodias = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_salary_slip_pay_days\",args:{\"emp\":cur_frm.doc.employee, \"mes\":moment(frm.doc.start_date).month()+1, \"ano\":moment(frm.doc.start_date).year(), \"pag\":(cur_frm.doc.total_days_in_month - cur_frm.doc.leave_without_pay - numero_faltas.responseJSON.message[0]) }});\n\n\t\t\t}\n\n\n\n\t\t}\t\n\t\ttotaldeducoes += tbl2[j].amount\n\n\t}\n\t\n\t//calculate_earning_total(cur_frm.doc, cur_frm.doc.doctype, cur_frm.doc.name,true);\n\n\t//calculate_ded_total(cur_frm.doc, cur_frm.doc.doctype, cur_frm.doc.name,true);\n//\t\t\t\tcur_frm.doc.total_deduction = totaldeducoes\n\tfrappe.model.set_value(cur_frm.doc.doctype,cur_frm.doc.name,'total_deduction',totaldeducoes)\n\trefresh_field('gross_pay','total_deduction');\n\tcalculate_net_pay(cur_frm.doc, cur_frm.doc.doctype, cur_frm.doc.name);\n\n\n//\t\t\t\tcur_frm.refresh()\n\n//\t\t\t\tcur_frm.reload_doc()\n\n\n//\t\t\t});\n}\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Process Payroll", 
  "modified": "2017-10-19 18:36:15.708383", 
  "name": "Process Payroll-Client", 
  "script": "numero_faltas = \"\";\n\nfrappe.ui.form.on(\"Process Payroll\", {\n\tonload:\tfunction(frm) {\n\t\tcur_frm.toggle_enable(\"processar_faltas\",false)\t\t\n\t\tcur_frm.toggle_enable(\"processa_inss\",false)\t\t\n\t\tcur_frm.toggle_enable(\"processa_salario\",false)\t\t\n\t\tconsole.log('entrada process_payroll')\n\t\t//cur_frm.toggle_enable(\"salary_review\",false)\n\t\t//cur_frm.toggle_enable(\"submit_salary_slip\",false)\n\n\t\t\n\n\t}\n\t\n\n});\n\n//frappe.ui.form.on(\"Process Payroll\",\"company\", function(frm,cdt,cdn) {\t\n\t\n//\tif (cur_frm.doc.company){\n//\t\tfrappe.model.get_value('Company', {'name': cur_frm.doc.company}, 'default_letter_head',\n//\t\t  function(d) {\n\t\t\t//console.log(d)\n\t\t\t//cur_frm.doc.letter_head = d.default_letter_head\n//\t\t\tfrappe.model.set_value(cdt,cdn,'letter_head',d.default_letter_head)\n//\t\t  })\t\n//\t}\t  \n//});\n\ncur_frm.cscript.processa_salario = function(doc,cdt,cdn){\n\t\tfrappe.show_alert(\"Ja processou o Salario\",2)\n\t\tif (cur_frm.ss_html){\n\t\t\tconsole.log(cur_frm.ss_html.innerHTML);\n\t\t\tfor (xx in cur_frm.ss_html.getElementsByTagName('caption')){\n\t\t\t\tjv = cur_frm.ss_html.getElementsByTagName('caption')[xx].innerText \n\t\t\t\tif (jv != undefined){\n\t\t\t\t\tconsole.log(jv)\t\t\n\t\t\t\t\tif (jv.search(\"Created Salary Slips\") != -1 || jv.search(\"Folhas de sal\u00e1rio criados\") != -1 ){\n\t\t\t\t\t\t//alert(\"VAMOS fazer o Sal Iliquido\")\n\t\t\t\t\t\tsaliliquido = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.salary_slip.proc_salario_iliquido\",args:{\"mes\":moment(cur_frm.doc.start_date).month()+1, \"ano\":moment(cur_frm.doc.start_date).year(), \"empresa\":cur_frm.doc.company}}) \n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcur_frm.toggle_enable(\"salary_review\",true)\n\t\t\n\t\tfrappe.show_alert(\"Antes de Submeter o Sal\u00e1rio fa\u00e7a uma Revis\u00e3o/Aprova\u00e7\u00e3o.\")\n\t\tcur_frm.toggle_enable(\"submit_salary_slip\",true)\n\t\t\n\t\n}\t\ncur_frm.cscript.processa_inss = function(doc,cdt,cdn){\n\t//show_alert(\"Vou processar \");\n\tif (cur_frm.ss_html){\n\t\tconsole.log(cur_frm.ss_html.innerHTML);\n\t\tfor (xx in cur_frm.ss_html.getElementsByTagName('a')){\n\t\t\tjv = cur_frm.ss_html.getElementsByTagName('a')[xx].innerText \n\t\t\tif (jv != undefined){\n\t\t\t\tif (jv.search(\"JV-\") != -1 ){\n\t\t\t\t\tfrappe.show_alert (\"JV CRIADA \" + \tcur_frm.ss_html.getElementsByTagName('a')[xx].innerText,2);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//alert(cur_frm.ss_html.getElementById(\"a href\").innerHTML);\n\t}\n}\n\ncur_frm.cscript.processar_faltas = function(doc,cdt,cdn){\n\n\n\tcur_frm.cscript.display_activity_log(\"Processando Faltas... Aguarde.\");\n\tconsole.log('Processa Faltas .....')\n\tnumero_faltas = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_faltas\",args:{\"mes\":moment(cur_frm.doc.start_date).month()+1, \"ano\":moment(cur_frm.doc.start_date).year(), \"empresa\":cur_frm.doc.company}}) \n\tcur_frm.cscript.display_activity_log(\"Processamento Feito.\");\n\n}\t\n\ncur_frm.cscript.create_salary_slip = function(doc, cdt, cdn) {\n\t//alert(\"BOTAO\")\n\t//REMOVE Botao Processar Faltas ....\n\t//cur_frm.cscript.processar_faltas();\n\t\n\tcur_frm.cscript.display_activity_log(\"Processando Faltas... Aguarde.\");\n\tconsole.log('Processa Faltas .....')\n\t\n\tfrappe.call({\n\t\tmethod:\"angola_erp.angola_erpnext.validations.irt.set_faltas\",\n\t\targs:{\n\t\t\t\"mes\":moment(cur_frm.doc.start_date).month()+1, \n\t\t\t\"ano\":moment(cur_frm.doc.start_date).year(), \n\t\t\t\"empresa\":cur_frm.doc.company,\n\t\t},\n\t\tcallback: function(r1,rt1) {\n\t\t\t\tif (r1.message){\n\t\t\t\t\tcur_frm.cscript.display_activity_log(\"Faltas processadas...\");\n\t\t\t\t\t\n\t\t\t\t\tcur_frm.cscript.display_activity_log(\"Processando Salarios... Aguarde.\");\n\t\t\t\t\t\n\t\t\t\t\tvar callback = function(r, rt){\n\t\t\t\t\t\tif (r.message)\n\t\t\t\t\t\t\tcur_frm.cscript.display_activity_log(r.message);\n\t\t\t\t\t\t\tfrappe.model.set_value(cdt,cdn,'processa_salario',1);  \n\n\t\t\t\t\t\t\n\t\t\t\t\t}\n//\t\t\t\t\tif (numero_faltas != \"\"){ console.log('TERMINOU processar Faltas.....')}\n\t\t\t\t\tconsole.log('Cria os Salarios.....')\n\t\t\t\t\treturn $c('runserverobj', args={'method':'create_salary_slips','docs':doc},callback);\n\n\t\t\t\t}\t\n\t\t}\n\t\t\t\n\t});\n//\tcur_frm.cscript.display_activity_log(\"Processando Salarios... Aguarde.\");\n\n\n//\tvar callback = function(r, rt){\n//\t\tif (r.message)\n//\t\t\tcur_frm.cscript.display_activity_log(r.message);\n//\t\t\tfrappe.model.set_value(cdt,cdn,'processa_salario',1);  \n\n\t\t\n//\t}\n//\tif (numero_faltas != \"\"){ console.log('TERMINOU processar Faltas.....')}\n//\tconsole.log('Cria os Salarios.....')\n//\treturn $c('runserverobj', args={'method':'create_salary_slips','docs':doc},callback);\n\t\n\n}\n\n\n\ncur_frm.cscript.submit_salary_slip = function(doc, cdt, cdn) {\n\tcur_frm.cscript.display_activity_log(\"\");\n\n\tfrappe.confirm(__(\"Do you really want to Submit all Salary Slip from {0} to {1}\", [doc.start_date, doc.end_date]), function() {\n\t\t// clear all in locals\n\t\tif(locals[\"Salary Slip\"]) {\n\t\t\t$.each(locals[\"Salary Slip\"], function(name, d) {\n\t\t\t\tfrappe.model.remove_from_locals(\"Salary Slip\", name);\n\t\t\t});\n\t\t}\n\t\tcur_frm.cscript.display_activity_log(\"Submetendo Salarios... Aguarde.\");\n\t\tfrappe.call({\n\t\t\tmethod: \"angola_erp.angola_erpnext.validations.process_payroll.submit_salary_slips\",\n\t\t\targs: {\n\t\t\t\t\"doc\":cur_frm.doc,\t\t\t\t\n\t\t\t},\n\t\t\tcallback: function(r,rt) {\n\t\t\t\tif (r.message){\n\t\t\t\t\tcur_frm.cscript.display_activity_log(r.message);\n\t\t\t\t\tfrappe.model.set_value(cdt,cdn,'processa_inss',1);  \n\t\t\t\t}\n\t\t\t}\n\n\t\t});\t\n\n\n\t});\n}\n\ncur_frm.cscript.salary_review = function(doc,cdt,cdn){\n\t\n \tfrappe.route_options = {\n// \t\t\"start_date\": moment(cur_frm.doc.start_date,\"dd-MM-YYYY\"),\n// \t\t\"end_date\": moment(cur_frm.doc.end_date,\"dd-MM-YYYY\")\n\t\t\"date_range\": [cur_frm.doc.start_date,cur_frm.doc.end_date]\n\n\t};\n\tfrappe.set_route('query-report', 'Salary Review');\n\n}\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "SMS Center", 
  "modified": "2017-05-13 07:53:18.076941", 
  "name": "SMS Center-Client", 
  "script": "frappe.ui.form.on(\"SMS Center\", {\n\tonload:\tfunction(frm) {\n\t\t//Disable default send_sms button and enables ours\n\t\tcur_frm.toggle_enable(\"send_sms\",false)\n\t\tcur_frm.toggle_enable(\"enviar_mensagens\",true)\n\t\tcur_frm.set_df_property(\"enviar_mensagens\",\"hidden\",false)\n\t}\n});\n\n\ncur_frm.cscript.enviar_mensagens = function(doc,cdt,cdn){\n\tenviarsms = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.sms_settings.send_sms\",args:{\"receiver_list\":cur_frm.doc.receiver_list, \"msg\": cur_frm.doc.message}})\n\t\n}", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "GL Entry", 
  "modified": "2017-05-17 15:43:45.715514", 
  "name": "GL Entry-Client", 
  "script": "\"formatter\":function (row, cell, value, columnDef, dataContext, default_formatter) {\n                    value = default_formatter(row, cell, value, columnDef, dataContext);\n            if (columnDef.id == \"Debit\") {\n                                   if(dataContext.Debit>1){\n                                    value = \"<span style='color:blue;font-weight:bold'>\" + value + \"</span>\";\n                                    }\n                        msgprint(dataContext.Debit)\n\n            }\n\n\n            if (dataContext.Debit) {\n            }\n\n            return value;\n        }", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Quotation", 
  "modified": "2018-02-16 12:33:49.423135", 
  "name": "Quotation-Client", 
  "script": "taxavenda= cur_frm.call({method:\"angola_erp.util.cambios.cambios\",args:{\"fonte\":\"BNA\"}})\nlista_retencoes = cur_frm.call({method:\"angola_erp.util.angola.get_lista_retencoes\",args:{}})\nlista_retencao = cur_frm.call({method:\"angola_erp.util.angola.get_taxa_retencao\",args:{}})\nlista_impostos = cur_frm.call({method:\"angola_erp.util.angola.get_taxa_ipc\",args:{}})\n\nvar temretencao = false \nvar temimpostoconsumo = false \nvar retencaofonte =0\nvar retencaopercentagem =0\nvar totalpararetencao = 0\nvar totalgeralimpostoconsumo = 0\nvar totalgeralretencaofonte = 0\nvar totalbaseretencaofonte = 0\nvar retencaofonteDESC\nvar totalservicos_retencaofonte =0\nvar totaldespesas_noretencaofonte =0\n\nfrappe.ui.form.on(\"Quotation\", {\n\tonload:\tfunction(frm) {\n\t\tcur_frm.set_df_property(\"taxa_cambio\",\"hidden\",false)\n\t},\n\trefresh: function(frm) {\n\t\t//cur_frm.toggle_enable(\"contra_valor\",false)\n//\t\tcur_frm.toggle_enable(\"total_retencao_na_fonte\",false)\n\t\tcur_frm.toggle_enable(\"taxa_cambio\",false)\n\t}\t\n\n});\n  \nfrappe.ui.form.on(\"Quotation\",\"validate\", function (frm) {\n\t//alert (\"Validar\")\n\t//Taxa de Cambio\n\tif (taxavenda.responseJSON != undefined && cur_frm.doc.taxa_cambio == 0){\n\t\tcur_frm.doc.taxa_cambio_bna = taxavenda.responseJSON.message[1]\n\t}\t\t\n\t\t\n});\n\ncur_frm.cscript.custom_charge_type = function(doc,cdt,cd){\n\t\t\talert (\"custom Charge_type\")\n\t\t\tvar d = locals[cdt][cd]\t\n\t\t\tif (d.charge_type == 'On Net Total') {\t\t\t\n\t\t\t\tfrappe.model.set_value(cdt,cd,'rate', 6.5)\n\t\t\t\tfrappe.model.set_value(cdt,cd,'account_head','34130000-I Industrial - Retencao A Liquidar') \n\t\t\t\t\n\t\t\t}\n}\n\n\n\t\nfrappe.ui.form.on(\"Quotation\",\"cambio_bna\", function(frm,cdt,cdn) {\n\tfrappe.call({\n\t\tasync: true,\n\t\tmethod: \"angola_erp.util.cambios.cambios\",\n\t\targs: {\n\t\t\t\"fonte\":\"BNA\"},\n\t\t\tcallback: function(r) {\n\t\t\t\ttaxavenda = r.message\n\t\t\t\tcur_frm.doc.taxa_cambio = taxavenda[1]\n\t\t\t\trefresh_field(\"taxa_cambio\")\n\t\t\t}\n\t\n\t});\n});\n\t\t\nfrappe.ui.form.on(\"Quotation\",\"customer\", function(doc,cdt,cdn) {\n\t\t//cur_frm.set_df_property(\"taxa_cambio\",\"hidden\",false)\n\t\t//cur_frm.toggle_enable(\"taxa_cambio\",false)\n\t\t//Taxa de Cambio\n\t\tif (taxavenda.responseJSON != undefined && cur_frm.doc.taxa_cambio == 0){\n\t\t\tcur_frm.doc.taxa_cambio = taxavenda.responseJSON.message[1]\n\t\t\tcur_frm.refresh_fields('taxa_cambio')\n\t\t}\t\t\n});\n\ncur_frm.add_fetch('item_code','standard_rate','rate')\n\nfrappe.ui.form.on(\"Quotation Item\",\"item_code\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\t\n\ttotalpararetencao = d.amount\n\n\tif (d.item_code){\n\t\tfrappe.show_alert(\"Total \" + d.amount,3)\t\n\t\tretencaofonte =0\n\t\tretencaopercentagem =0\n\t\tfrappe.model.with_doc(\"Item\", d.item_code, function() { \n\t\t\tvar dd = frappe.model.get_doc(\"Item\",d.item_code)\n\t//\t\talert (\"rotina \", d.retencao_na_fonte)\n\t\t\tif (dd.retencao_na_fonte == 1){\n\t//\t\tif (d.que_retencao !=\"\"){\n\t\t\t\tfor (x = 0; x < lista_retencoes.responseJSON.message.length; x++){\n\t\t\t\t\tif (lista_retencoes.responseJSON.message[x].descricao == dd.que_retencao) {\n\t\t\t\t\t\tretencaopercentagem = lista_retencoes.responseJSON.message[x].percentagem\t\t\t\n\t\t\t\t\t\tretencaofonteDESC = dd.que_retencao\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}\t\n\t\t\t\t//Retencao from Taxe and Charges list\n\t\t\t\t//retencaofonteDESC = lista_retencao.responseJSON.message[0].parent \n\t\t\t\t\n\t\t\t}\n\t\t\t//First load qtd will always be 1 \n\t\t\tif (d.amount ==0){\n\t\t\t\td.retencao_na_fonte = (dd.standard_rate * retencaopercentagem) / 100\n\t\t\t\tretencaofonte = (dd.standard_rate * retencaopercentagem) / 100\n\t\t\t\n\t\t\t}else{\n\t\t\t\td.retencao_na_fonte = (d.amount * retencaopercentagem) / 100\n\t\t\t\tretencaofonte = (d.amount * retencaopercentagem) / 100\n\t\t\t}\n\t\t\t\n\t\t\tif (retencaofonte != 0) {\n\t\t\t\tfrappe.show_alert(\"Retencao na fonte\",3)\t\n\t\t\t\tif (doc.fields_dict.taxes_and_charges.value == null || doc.fields_dict.taxes_and_charges.value == \"\"){\n\t\t\t\t\t//doc.set_value(\"taxes_and_charges\",retencaofonteDESC )\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t\n\t\t\t\t}\t\n\t\t\t}\t\t\t\n\t\t\tif (dd.imposto_de_consumo == 1){\n\t\t\t\t//Busca o Imposto from Sales Taxes Charges (account 34210000)\t\t\t\n\t\t\t\tfrappe.show_alert(\"Imposto de Consumo\",3)\t\t\t\t\t\n\t\t\t\td.imposto_de_consumo = (d.amount * 10) / 100\n\t\t\t\ttotalgeralimpostoconsumo += d.imposto_de_consumo \n\t\t\t\t\n\t\t\t\tif (doc.fields_dict.taxes_and_charges.value == null || doc.fields_dict.taxes_and_charges.value == \"\"){\n\t\t\t\t\t//Add Imposto e Consumo \n\t\t\t\t\t\n\t\t\t\t\tdoc.set_value(\"taxes_and_charges\", lista_impostos.responseJSON.message[0].parent )\n\t\t\t\t\tcur_frm.refresh_fields()\n\t\t\t\t\t//cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname[cdn].charge_type.refresh()\n\t\t\t\t\t// Now adds the Amount of the TAX based on the total of all itens \n\t\t\t\t\t//if(this.cur_frm.fields_dict[\"taxes\"].grid.get_field('charge_type')){\n\t\t\t\t\t//\talert(this.cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname['charge_type']) //get_field('charge_type'))\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\t\n\t\t\t\t\t//var tbl1 = cur_frm.doc.taxes || [];\n\t\t\t\t\t//alert (\"item code \" + tbl1.charge_type)\t\t\t\t\t\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,\"tax_amount\",totalgeralimpostoconsumo)  \n\t\t\t\t\t//} \t\t\n\t\t\t\t\t//cur_frm.cscript.validate_taxes_and_charges(\"Sales Taxes and Charges\", \"INVTD000005\" );\n\t\t\t\t\t\n//\t\t\t\t}else if (doc.fields_dict.taxes_and_charges.field[\"account_head\"] ==\"34210000\"){\n//\t\t\t\t\talert(\"AQUI Tem que ver\")\t\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\tvar me = this;\n\t\t\t\t\tvar tbl1 = this.cur_frm.doc[\"taxes\"];\n\t\t\t\t\t//alert(frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}))\n\t\t\t\t\t//frappe.model.set_value(frappe.utils.filter_dict(this.cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)  \n\t\t\t\t}\n\t\t\t\n\t\t\t}\t\n\t\n\n\t\t\t});\t\n\t}\n});\n\ncur_frm.cscript.amount = function(doc,cdt,cdn){\n//frappe.ui.form.on(\"Sales Invoice Item\",\"amount\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\talert(\"Total \" + d.amount)\n\t\n}\n//);\n\n\n\nfrappe.ui.form.on(\"taxes\",\"charge_type\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\talert(\"AQUII\")\n\t\n\t\n\t\n});\n\ncur_frm.cscript.tax_amount = function(doc,cdt,cdn) {\n\talert(\"tax Amount\")\n\t\n}\n\ncur_frm.cscript.charge_type = function(doc,cdt,cdn) {\n\talert(\"Charge\")\n\t\n}\n\n\n\nvar itens_ = function(frm,cdt,cdn){\n\tfrappe.model.with_doc(frm, cdt, function() { \n\t\tvar d = frappe.model.get_doc(frm,cdt)\n//\t\talert (\"rotina \", d.retencao_na_fonte)\n\t\tif (d.retencao_na_fonte == 1){\n\t\t\tretencaofonte = d.que_retencao\n\t\t\tfrappe.show_alert(\"tem retencao na fonte: \" + d.que_retencao,3)\t\n\n\t\t\t\n//\t\t\tfrappe.model.with_doc(\"Retencoes\", d.que_retencao, function() { \t\n//\t\t\t\tvar retencao = frappe.model.get_doc(\"Retencoes\", d.que_retencao)\n//\t\t\t\tretencaopercentagem = retencao.percentagem\n//\t\t\t\talert(\"Percentagem \" + totalpararetencao + \" \" + retencao.percentagem)\n//\t\t\t});\t\n\t\t\t\n\t\t}\n\n\t});\n}\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Payment Entry", 
  "modified": "2018-12-16 03:33:00.122990", 
  "name": "Payment Entry-Client", 
  "script": "//HELKyds\n//Last Modified 15-12-2018\nfornecedor_retencao = 0\ncliente_retencao = 0\nfatura_total_retencao_na_fonte = 0\nconta =0\ncompany_costcenter = 0\nold_reference_name = 0\n\nvalor_pago = 0\n\nif (cur_frm.doc.party){fornecedor_retencao = cur_frm.call({method:\"angola_erp.util.angola.get_supplier_retencao\",args:{\"fornecedor\":cur_frm.doc.party,\"fornclien\":cur_frm.doc.party_type}})}\nif (cur_frm.doc.company) {contab_conta_retencao = cur_frm.call({method:\"angola_erp.util.angola.get_contab_taxa_retencao\",args:{\"empresa\":cur_frm.doc.company,\"fornclien\":cur_frm.doc.party_type}})}\nvar  lista = []\n\nfrappe.ui.form.on('Payment Entry', {\n\tonload: function(frm) {\n\t\tif(frm.doc.__islocal) {\n\t\t\t//frappe.show_alert(frm.doc.paid_from,2)\n\t\t\tif (frm.doc.party_type == 'Supplier'){\n\t\t\t\n\t\t\t\t//fornecedor_retencao = frm.call({method:\"angola_erp.util.angola.get_supplier_retencao\",args:{\"fornecedor\":frm.doc.party}})\n\t\t\t}\n\t\t\t\n\t\t\tif (cur_frm.doc.payment_type == 'Receive'){\n\t\t\t\t//cur_frm.set_df_property(\"mode_of_payment\",\"reqd\",true)\t\n\t\t\t\tcur_frm.get_field('mode_of_payment').df.reqd = true \n\t\t\t}\t\n\t\t}\n\t\tfatura_total_retencao_na_fonte = 0\n\t\tconta =0\n\t\tcompany_costcenter = 0\n\t\told_reference_name = 0\n\t\tvar valor_pago = 0\n\t\tvar novoTotalImposto = 0\n\t\t\n\t\tvar  lista = []\n\n\n\t\t\n\t},\n\t\n\trefresh: function(frm) {\n\t\t//frappe.show_alert(fornecedor_retencao\n\t\tconsole.log('REFRESSSSSSSHH ', conta)\n\t\tconta += 1\n\n\t\tpaidamount = 0\n\t\t\n\t\tcur_frm.get_field('reference_no').df.reqd = true \n\t\tcur_frm.get_field('mode_of_payment').df.reqd = true \n\t\tif (company_costcenter == 0){ if (frm.doc.company != undefined) {company_costcenter = frappe.get_doc(\":Company\", frm.doc.company).cost_center}};\n\t\tif (cur_frm.doc.payment_type == 'Pay' && (cur_frm.doc.status == 'Draft' || cur_frm.doc.docstatus == 0)){\t\t\t\n\t\t\tif (frm.doc.paid_from_account_currency != null){\n\t\t\t\t\n\t\t\t\tif(frm.doc.references.length != 0){\n\t\t\t\t\t\n\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\n\t\t\t\t\t\t//get Retencao\n\t\t\t\t\t\t//dddd = frappe.get_doc(cur_frm.doc.party_type.valueOf(),cur_frm.doc.party.valueOf())\n\t\t\t\t\t\t//frappe.show_alert(retencao_supplier.retencao_na_fonte,2)\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lista.length !=0){\n\t\t\t\t\t\t\tif (lista.search(row.reference_name) == -1){\n\t\t\t\t\t\t\t\tlista += ',' + row.reference_name\t\n\t\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlista += ',' + row.reference_name\t\n\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", 0)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t//ddd = frappe.get_doc(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t//console.log(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\tif (frm.doc.deductions.length !=0){\n\t\t\t\t\t\t\tif (fatura_total_retencao_na_fonte !=0){\n\t\t\t\t\t\t\t\t//uncheck allocate_payment_amount\n\t\t\t\t\t\t\t\t//if (retencao_supplier.retencao_na_fonte =='Retencao na fonte'){\n\t\t\t\t\t\t\t\tcur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t\t\t//cur_frm.set_value(\"allocate_payment_amount\", 0 )\n\t\t\t\t\t\t\t\tif(frm.doc.references.length > 1){\n\t\t\t\t\t\t\t\t\tpaidamount = paidamount + flt(row.outstanding_amount) \n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", cur_frm.doc.paid_amount + flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tcur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//cur_frm.set_df_property(\"reference_no\",\"reqd\",true)\n\t\t\t\t\t\t\t\t//cur_frm.get_field('reference_no').df.reqd = true \n\t\t\t\t\t\t\t\t//row.allocated_amount = 1111111 //row.outstanding_amount\n\t\t\t\t\t\t\t\t//cur_frm.doc.paid_amount = flt(row.outstanding_amount) - flt(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\t\t\t//}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t\t})\n\t\t\t\t\tif (paidamount !=0) {cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte))}\n\t\t\n\t\t\t\t\tconsole.log(company_costcenter)\n\t\t\t\t\tconsole.log(contab_conta_retencao.responseJSON.message[0].name)\n\t\t\t\t\tif (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_amount ) {\t\n\t\t\t\t\t\tconsole.log('adiciona RETENCAO 3413')\n\t\t\t\t\t\n\t\t\t\t\t\tif (frm.doc.deductions ==0){\n\t\t\t\t\t\t\tvar c = frm.add_child(\"deductions\");\n\t\t\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34130000-I Industrial - Retencao A Liquidar\n\t\t\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\t\t\tc.amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (fornecedor_retencao.readyState == 4 && fornecedor_retencao.responseText.length >2){\n\t\t\t\t\tconsole.log(fornecedor_retencao.responseJSON.message[0].retencao_na_fonte)\n\t\t\t\t\tconsole.log(frm.doctype)\n\t\t\t\t\tconsole.log(frm.docname)\n\t\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\t}else{\t\n\t\t\t\t\tfrappe.show_alert(\"Este Fornecedor/Cliente/Employee nao tem Retencao na Fonte!!!\")\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}else if (cur_frm.doc.payment_type == 'Receive' && (cur_frm.doc.status == 'Draft' || cur_frm.doc.docstatus == 0)){\n\t\t\tif (frm.doc.paid_from_account_currency != null){\n\t\t\t\t\n\t\t\t\tif (frm.doc.references.length !=0){\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\n\t\t\t\t\t\t//get Retencao\n\t\t\t\t\t\t//dddd = frappe.get_doc(cur_frm.doc.party_type.valueOf(),cur_frm.doc.party.valueOf())\n\t\t\t\t\t\t//frappe.show_alert(retencao_supplier.retencao_na_fonte,2)\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lista.length !=0){\n\t\t\t\t\t\t\tif (lista.search(row.reference_name) == -1){\n\t\t\t\t\t\t\t\tlista += ',' + row.reference_name\t\n\t\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t}else if (row.outstanding_amount == row.allocated_amount && row.outstanding_amount != row.total_amount){\n\t\t\t\t\t\t\t\t//chama Facturas para add Retencao\n\t\t\t\t\t\t\t\tif (frm.doc.deductions.length ==0){\n\t\t\t\t\t\t\t\t\tconsole.log('Chama Factura ... mas 1 vez only')\n\t\t\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlista += ',' + row.reference_name\t\n\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", 0)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t//ddd = frappe.get_doc(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t//console.log(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\tif (frm.doc.deductions.length !=0){\n\t\t\t\t\t\t\tif (fatura_total_retencao_na_fonte !=0){\n\t\t\t\t\t\t\t\t//uncheck allocate_payment_amount\n\t\t\t\t\t\t\t\t//if (retencao_supplier.retencao_na_fonte =='Retencao na fonte'){\n\t\t\t\t\t\t\t\tcur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t\t\t//cur_frm.set_value(\"allocate_payment_amount\", 0 )\n\t\t\t\t\t\t\t\tif(frm.doc.references.length > 1){\n\t\t\t\t\t\t\t\t\tpaidamount = paidamount + flt(row.outstanding_amount)  \t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte))\n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", cur_frm.doc.paid_amount + flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}else if (row.total_amount != row.outstanding_amount){\n\t\t\t\t\t\t\t\t\t//Already has 1/more payments done..\n\t\t\t\t\t\t\t\t\tvar totalimposto = 0;\n\t\t\t\t\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\t\t\t\t\ttotalimposto = row.amount\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tcur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(totalimposto) )\n\t\t\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tcur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//cur_frm.set_df_property(\"reference_no\",\"reqd\",true)\n\t\t\t\t\t\t\t\t//cur_frm.get_field('reference_no').df.reqd = true \n\t\t\t\t\t\t\t\t//row.allocated_amount = 1111111 //row.outstanding_amount\n\t\t\t\t\t\t\t\t//cur_frm.doc.paid_amount = flt(row.outstanding_amount) - flt(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\t\t\t//}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t\t})\n\t\t\t\t\tif (paidamount !=0) {cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte))}\n\t\t\t\t\t\t\t\t\t\n\t\t\n\t\t\t\t\tconsole.log(company_costcenter)\n\t\t\t\t\tconsole.log(contab_conta_retencao.responseJSON.message[0].name)\n\t\t\t\t\t//if (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_ammount){\n\t\t\t\t\tif (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_amount ) {\t\n\t\t\t\t\t\tconsole.log('adiciona RETENCAO')\n\t\t\t\t\t\tif (frm.doc.deductions ==0){\n\t\t\t\t\t\t\tvar c = frm.add_child(\"deductions\");\n\t\t\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34140000-I Industrial \n\t\t\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\t\t\tc.amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (fornecedor_retencao.readyState == 4 && fornecedor_retencao.responseText.length >2){\n\t\t\t\t\tconsole.log(fornecedor_retencao.responseJSON.message[0].retencao_na_fonte)\n\t\t\t\t\tconsole.log(frm.doctype)\n\t\t\t\t\tconsole.log(frm.docname)\n\t\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\t}else{\t\n\t\t\t\t\tfrappe.show_alert(\"Este Fornecedor/Cliente/Employee nao tem Retencao na Fonte!!!\")\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (cur_frm.doc.mode_of_payment == undefined) { valor_pago = 0}\t//Reset ao Valor\n\t\t\t}\t\t\t\n\t\t}\t\n\t\t\n\t},\n\t\n//\tpayment_type: function(frm,cdn,cdt){\n//\t\tif (cur_frm.doc.payment_type == __('Receive')){\n//\t\t\tcur_frm.set_df_property(\"mode_of_payment\",\"reqd\",true)\t\n//\t\t}\t\n//\t},\n\t\n\tcompany: function(frm, cdn, cdt){\n\t\t\tif (cur_frm.doc.company) {contab_conta_retencao = cur_frm.call({method:\"angola_erp.util.angola.get_contab_taxa_retencao\",args:{\"empresa\":cur_frm.doc.company,\"fornclien\":cur_frm.doc.party_type}})}\n\t},\n\t\n\tmode_of_payment: function(frm,cdn,cdt){\n\t\tif (cur_frm.doc.mode_of_payment == 'Cash' || cur_frm.doc.mode_of_payment == 'Numer\u00e1rio') {\n\t\t\t\tcur_frm.doc.reference_no='000'\n\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\tfrm.events.reference_no(frm);\n\t\t}else{\n\t\t\t\tcur_frm.doc.reference_no=''\n\t\t}\n\t\tcur_frm.get_field('paid_amount').df.read_only = false\n\t\tfrm.refresh_fields()\n\t},\n\t\n\tparty: function(frm,cdn,cdt){\n\t\tif (fornecedor_retencao == 0){\n\t\t\tfrappe.show_alert(\"Ainda nao fui buscar a ficha Fornecedor/Cliente!!!\")\n\t\t\tfornecedor_retencao = cur_frm.call({method:\"angola_erp.util.angola.get_supplier_retencao\",args:{\"fornecedor\":cur_frm.doc.party,\"fornclien\":cur_frm.doc.party_type}})\n\t\t\t\n\t\t}\n\t\t\n\t\t// para incluir a Retencao ...\n\n\t\t// PODE SER REMOVIDO DEPOIS\t\t\n\t\t// PODE SER REMOVIDO DEPOIS\t\t\n\t\t// PODE SER REMOVIDO DEPOIS\t\t\n\t\t// PODE SER REMOVIDO DEPOIS\n\t\tconsole.log('PARTY ', conta)\n\t\tconta += 1\n\n\t\tpaidamount = 0\n\t\tfrm.refresh_fields()\n\t\t\n\t\tcur_frm.get_field('reference_no').df.reqd = true \n\t\tcur_frm.get_field('mode_of_payment').df.reqd = true \n\t\tif (company_costcenter == 0){ if (frm.doc.company != undefined) {company_costcenter = frappe.get_doc(\":Company\", frm.doc.company).cost_center}};\n\t\tif (cur_frm.doc.payment_type == 'Pay' && (cur_frm.doc.status == 'Draft' || cur_frm.doc.docstatus == 0)){\t\t\t\n\t\t\tif (frm.doc.paid_from_account_currency != null){\n\t\t\t\t\n\t\t\t\tif(frm.doc.references.length != 0){\n\t\t\t\t\t\n\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\n\t\t\t\t\t\t//get Retencao\n\t\t\t\t\t\t//dddd = frappe.get_doc(cur_frm.doc.party_type.valueOf(),cur_frm.doc.party.valueOf())\n\t\t\t\t\t\t//frappe.show_alert(retencao_supplier.retencao_na_fonte,2)\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lista.length !=0){\n\t\t\t\t\t\t\tif (lista.search(row.reference_name) == -1){\n\t\t\t\t\t\t\t\tlista += ',' + row.reference_name\t\n\t\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlista += ',' + row.reference_name\t\n\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", 0)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t//ddd = frappe.get_doc(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t//console.log(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\tif (frm.doc.deductions.length !=0){\n\t\t\t\t\t\t\tif (fatura_total_retencao_na_fonte !=0){\n\t\t\t\t\t\t\t\t//uncheck allocate_payment_amount\n\t\t\t\t\t\t\t\t//if (retencao_supplier.retencao_na_fonte =='Retencao na fonte'){\n\t\t\t\t\t\t\t\tcur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t\t\t//cur_frm.set_value(\"allocate_payment_amount\", 0 )\n\t\t\t\t\t\t\t\tif(frm.doc.references.length > 1){\n\t\t\t\t\t\t\t\t\tpaidamount = paidamount + flt(row.outstanding_amount) \n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", cur_frm.doc.paid_amount + flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tcur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//cur_frm.set_df_property(\"reference_no\",\"reqd\",true)\n\t\t\t\t\t\t\t\t//cur_frm.get_field('reference_no').df.reqd = true \n\t\t\t\t\t\t\t\t//row.allocated_amount = 1111111 //row.outstanding_amount\n\t\t\t\t\t\t\t\t//cur_frm.doc.paid_amount = flt(row.outstanding_amount) - flt(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\t\t\t//}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t\t})\n\t\t\t\t\tif (paidamount !=0) {cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte))}\n\t\t\n\t\t\t\t\tconsole.log(company_costcenter)\n\t\t\t\t\tconsole.log(contab_conta_retencao.responseJSON.message[0].name)\n\t\t\t\t\tif (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_amount ) {\t\n\t\t\t\t\t\tconsole.log('adiciona RETENCAO 3413')\n\t\t\t\t\t\n\t\t\t\t\t\tif (frm.doc.deductions ==0){\n\t\t\t\t\t\t\tvar c = frm.add_child(\"deductions\");\n\t\t\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34130000-I Industrial - Retencao A Liquidar\n\t\t\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\t\t\tc.amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (fornecedor_retencao.readyState == 4 && fornecedor_retencao.responseText.length >2){\n\t\t\t\t\tconsole.log(fornecedor_retencao.responseJSON.message[0].retencao_na_fonte)\n\t\t\t\t\tconsole.log(frm.doctype)\n\t\t\t\t\tconsole.log(frm.docname)\n\t\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\t}else{\t\n\t\t\t\t\tfrappe.show_alert(\"Este Fornecedor/Cliente/Employee nao tem Retencao na Fonte!!!\")\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}else if (cur_frm.doc.payment_type == 'Receive' && (cur_frm.doc.status == 'Draft' || cur_frm.doc.docstatus == 0)){\n\t\t\tif (frm.doc.paid_from_account_currency != null){\n\t\t\t\t\n\t\t\t\tif (frm.doc.references.length !=0){\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\n\t\t\t\t\t\t//get Retencao\n\t\t\t\t\t\t//dddd = frappe.get_doc(cur_frm.doc.party_type.valueOf(),cur_frm.doc.party.valueOf())\n\t\t\t\t\t\t//frappe.show_alert(retencao_supplier.retencao_na_fonte,2)\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lista.length !=0){\n\t\t\t\t\t\t\tif (lista.search(row.reference_name) == -1){\n\t\t\t\t\t\t\t\tlista += ',' + row.reference_name\t\n\t\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t}else if (row.outstanding_amount == row.allocated_amount && row.outstanding_amount != row.total_amount){\n\t\t\t\t\t\t\t\t//chama Facturas para add Retencao\n\t\t\t\t\t\t\t\tif (frm.doc.deductions.length ==0){\n\t\t\t\t\t\t\t\t\tconsole.log('Chama Factura ... mas 1 vez only')\n\t\t\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlista += ',' + row.reference_name\t\n\t\t\t\t\t\t\tfaturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", 0)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t//ddd = frappe.get_doc(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t//console.log(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\tif (frm.doc.deductions.length !=0){\n\t\t\t\t\t\t\tif (fatura_total_retencao_na_fonte !=0){\n\t\t\t\t\t\t\t\t//uncheck allocate_payment_amount\n\t\t\t\t\t\t\t\t//if (retencao_supplier.retencao_na_fonte =='Retencao na fonte'){\n\t\t\t\t\t\t\t\tcur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t\t\t//cur_frm.set_value(\"allocate_payment_amount\", 0 )\n\t\t\t\t\t\t\t\tif(frm.doc.references.length > 1){\n\t\t\t\t\t\t\t\t\tpaidamount = paidamount + flt(row.outstanding_amount)  \t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte))\n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", cur_frm.doc.paid_amount + flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}else if (row.total_amount != row.outstanding_amount){\n\t\t\t\t\t\t\t\t\t//Already has 1/more payments done..\n\t\t\t\t\t\t\t\t\tvar totalimposto = 0;\n\t\t\t\t\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\t\t\t\t\ttotalimposto = row.amount\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tcur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(totalimposto) )\n\t\t\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tcur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//cur_frm.set_df_property(\"reference_no\",\"reqd\",true)\n\t\t\t\t\t\t\t\t//cur_frm.get_field('reference_no').df.reqd = true \n\t\t\t\t\t\t\t\t//row.allocated_amount = 1111111 //row.outstanding_amount\n\t\t\t\t\t\t\t\t//cur_frm.doc.paid_amount = flt(row.outstanding_amount) - flt(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\t\t\t//}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t\t})\n\t\t\t\t\tif (paidamount !=0) {cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte))}\n\t\t\t\t\t\t\t\t\t\n\t\t\n\t\t\t\t\tconsole.log(company_costcenter)\n\t\t\t\t\tconsole.log(contab_conta_retencao.responseJSON.message[0].name)\n\t\t\t\t\t//if (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_ammount){\n\t\t\t\t\tif (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_amount ) {\t\n\t\t\t\t\t\tconsole.log('adiciona RETENCAO')\n\t\t\t\t\t\tif (frm.doc.deductions ==0){\n\t\t\t\t\t\t\tvar c = frm.add_child(\"deductions\");\n\t\t\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34140000-I Industrial \n\t\t\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\t\t\tc.amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (fornecedor_retencao.readyState == 4 && fornecedor_retencao.responseText.length >2){\n\t\t\t\t\tconsole.log(fornecedor_retencao.responseJSON.message[0].retencao_na_fonte)\n\t\t\t\t\tconsole.log(frm.doctype)\n\t\t\t\t\tconsole.log(frm.docname)\n\t\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\t}else{\t\n\t\t\t\t\tfrappe.show_alert(\"Este Fornecedor/Cliente/Employee nao tem Retencao na Fonte!!!\")\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (cur_frm.doc.mode_of_payment == undefined) { valor_pago = 0}\t//Reset ao Valor\n\t\t\t}\t\t\t\n\t\t}\t\t\t\n\t\t\n\t\t\n\t},\n\n\tpaid_amount: function(frm,cdn,cdt){\n\t\tif (cur_frm.doc.total_allocated_amount == 0 && cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_amount && cur_frm.doc.unallocated_amount != 0 && cur_frm.doc.mode_of_payment != undefined){\n\t\t\t\tconsole.log('Percentargem do Imposto PAID AMOUNT' );\n\t\t\t\tcur_frm.get_field('paid_amount').df.read_only = false\n\t\t\t\tif (valor_pago == 0){\n\t\t\t\t\tvar totalfactura = 0;\n\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\ttotalfactura = row.outstanding_amount\n\n\t\t\t\t\t})\n\t\t\t\t\tvalor_pago = cur_frm.doc.paid_amount\n\t\t\t\t\tconsole.log((cur_frm.doc.paid_amount/totalfactura)*100 )\n\t\t\t\t\tvar percentagemPAGA = (cur_frm.doc.paid_amount/totalfactura)*100 \n\t\t\t\t\t//Valor do Imposto a ser pago com base na % calcaulada\n\t\t\t\t\tvar totalimposto = 0;\n\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\ttotalimposto = row.amount\n\n\t\t\t\t\t})\n\t\t\t\t\tconsole.log((totalimposto*percentagemPAGA)/100)\n\t\t\t\t\tconsole.log(cur_frm.doc.paid_amount - (totalimposto*percentagemPAGA)/100)\n\n\t\t\t\t\t// add o valor allocated_amount\n\t\t\t\t\tvar novoTotalfactura = cur_frm.doc.paid_amount - (totalimposto*percentagemPAGA)/100\n\t//\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t//\t\t\t\t\trow.allocated_amount = novoTotalfactura\n\n\t//\t\t\t\t})\n//\t\t\t\t\tcur_frm.doc.paid_amount = novoTotalfactura\n\t\t\t\t\t\n\t\t\t\t\t//add o valor da deductions\n\t\t\t\t\tvar novoTotalImposto = (totalimposto*percentagemPAGA)/100\n\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\trow.amount = flt(novoTotalImposto)\n\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tfrm.events.set_total_allocated_amount(frm);\n\t\t\t\t\tfrm.events.set_difference_amount(frm);\n\t\t\t\t}else{\t\n\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\ttmp_amount = row.amount \n\n\t\t\t\t\t})\n\n\t\t\t\t\tif (flt(cur_frm.doc.unallocated_amount - cur_frm.doc.paid_amount,2) == flt(tmp_amount,2)){ \t\t//(cur_frm.doc.unallocated_amount - cur_frm.doc.paid_amount ==  tmp_amount){\n\t\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\t\trow.allocated_amount = cur_frm.doc.unallocated_amount\n\n\t\t\t\t\t\t})\n\t\t\t\t\t\tfrm.events.set_total_allocated_amount(frm);\n\t\t\t\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t}else if (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_amount){\n\t\t\tconsole.log('Pagamento diferente .....')\n\t\t\tif (cur_frm.doc.mode_of_payment == undefined){\n\t\t\t\t//payment_type not yet Set\n\t\t\t\tcur_frm.get_field('paid_amount').df.read_only = true\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}else{\n\t\t\t//para fazer Refresh e carregar a Retencao...\t\t\t\t\n\t\t\t// para incluir a Retencao ...\n\t\t\t\n\t\t\tconsole.log('PAID AMOUNT ', conta)\n\t\t\tconta += 1\n\n\t\t\tpaidamount = 0\n\t\t\tfrm.refresh_fields()\n\t\t\t\n\t\t\tcur_frm.get_field('reference_no').df.reqd = true \n\t\t\tcur_frm.get_field('mode_of_payment').df.reqd = true \n\t\t\tif (company_costcenter == 0){ if (frm.doc.company != undefined) {company_costcenter = frappe.get_doc(\":Company\", frm.doc.company).cost_center}};\n\t\t\tif (cur_frm.doc.payment_type == 'Pay' && (cur_frm.doc.status == 'Draft' || cur_frm.doc.docstatus == 0)){\t\t\t\n\t\t\t\tif (frm.doc.paid_from_account_currency != null){\n\t\t\t\t\t\n\t\t\t\t\tif(frm.doc.references.length != 0){\n\t\t\t\t\t\t\n\t\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\n\t\t\t\t\t\t\t//get Retencao\n\t\t\t\t\t\t\t//dddd = frappe.get_doc(cur_frm.doc.party_type.valueOf(),cur_frm.doc.party.valueOf())\n\t\t\t\t\t\t\t//frappe.show_alert(retencao_supplier.retencao_na_fonte,2)\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (lista.length !=0){\n\t\t\t\t\t\t\t\tif (lista.indexOf(row.reference_name) == -1){\n\t\t\t\t\t\t\t\t\tlista.push(row.reference_name)\n\t\t\t\t\t\t\t\t\t//lista += ',' + str(row.reference_name)\t\n\t\t\t\t\t\t\t\t\t//faturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tlista.push(row.reference_name)\n\t\t\t\t\t\t\t\t//lista += ',' + str(row.reference_name)\n\t\t\t\t\t\t\t\t//faturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", 0)\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\n\t\t\t\t\t\t//para retencao com multiplas invoices ...\n\t\t\t\t\t\tif (lista.length != 0){\n\t\t\t\t\t\t\tfaturas_(\"Sales Invoice\",lista)\n\t\t\t\t\t\t\t//ddd = frappe.get_doc(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t//console.log(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\t\tif (frm.doc.deductions.length !=0){\n\t\t\t\t\t\t\t\tif (fatura_total_retencao_na_fonte !=0){\n\t\t\t\t\t\t\t\t\t//uncheck allocate_payment_amount\n\t\t\t\t\t\t\t\t\t//if (retencao_supplier.retencao_na_fonte =='Retencao na fonte'){\n\t\t\t\t\t\t\t\t\tcur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"allocate_payment_amount\", 0 )\n\t\t\t\t\t\t\t\t\tif(frm.doc.references.length > 1){\n\t\t\t\t\t\t\t\t\t\tpaidamount = paidamount + flt(row.outstanding_amount) \n\t\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", cur_frm.doc.paid_amount + flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tcur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//cur_frm.set_df_property(\"reference_no\",\"reqd\",true)\n\t\t\t\t\t\t\t\t\t//cur_frm.get_field('reference_no').df.reqd = true \n\t\t\t\t\t\t\t\t\t//row.allocated_amount = 1111111 //row.outstanding_amount\n\t\t\t\t\t\t\t\t\t//cur_frm.doc.paid_amount = flt(row.outstanding_amount) - flt(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\t\t\t\t//}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (paidamount !=0) {cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte))}\n\t\t\t\n\t\t\t\t\t\tconsole.log(company_costcenter)\n\t\t\t\t\t\tconsole.log(contab_conta_retencao.responseJSON.message[0].name)\n\t\t\t\t\t\tif (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_amount ) {\t\n\t\t\t\t\t\t\tconsole.log('adiciona RETENCAO 3413')\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (frm.doc.deductions ==0){\n\t\t\t\t\t\t\t\tvar c = frm.add_child(\"deductions\");\n\t\t\t\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34130000-I Industrial - Retencao A Liquidar\n\t\t\t\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\t\t\t\tc.amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tif (fornecedor_retencao.readyState == 4 && fornecedor_retencao.responseText.length >2){\n\t\t\t\t\t\tconsole.log(fornecedor_retencao.responseJSON.message[0].retencao_na_fonte)\n\t\t\t\t\t\tconsole.log(frm.doctype)\n\t\t\t\t\t\tconsole.log(frm.docname)\n\t\t\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\t\t}else{\t\n\t\t\t\t\t\tfrappe.show_alert(\"Este Fornecedor/Cliente/Employee nao tem Retencao na Fonte!!!\")\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if (cur_frm.doc.payment_type == 'Receive' && (cur_frm.doc.status == 'Draft' || cur_frm.doc.docstatus == 0)){\n\t\t\t\tif (frm.doc.paid_from_account_currency != null){\n\t\t\t\t\t\n\t\t\t\t\tif (frm.doc.references.length !=0){\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\n\t\t\t\t\t\t\t//get Retencao\n\t\t\t\t\t\t\t//dddd = frappe.get_doc(cur_frm.doc.party_type.valueOf(),cur_frm.doc.party.valueOf())\n\t\t\t\t\t\t\t//frappe.show_alert(retencao_supplier.retencao_na_fonte,2)\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (lista.length !=0){\n\t\t\t\t\t\t\t\tif (lista.indexOf(row.reference_name) == -1){\n\t\t\t\t\t\t\t\t\t//lista += ',' + row.reference_name\t\n\t\t\t\t\t\t\t\t\tlista.push(row.reference_name)\n\t\t\t\t\t\t\t\t}else if (row.outstanding_amount == row.allocated_amount && row.outstanding_amount != row.total_amount){\n\t\t\t\t\t\t\t\t\t//chama Facturas para add Retencao\n\t\t\t\t\t\t\t\t\tif (frm.doc.deductions.length ==0){\n\t\t\t\t\t\t\t\t\t\tconsole.log('Chama Factura ... mas 1 vez only')\n\t\t\t\t\t\t\t\t\t\t//faturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t\t\t\tlista.push(row.reference_name)\n\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tlista.push(row.reference_name)\n\t\t\t\t\t\t\t\t//lista += ',' + str(row.reference_name)\n\t\t\t\t\t\t\t\t//faturas_(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", 0)\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\t//para retencao com multiplas invoices ...\n\t\t\t\t\t\tif (lista.length != 0){\n\t\t\t\t\t\t\tii =0 \n\t\t\t\t\t\t\tfor (ii in lista){\n\t\t\t\t\t\t\t\tfaturas_(\"Sales Invoice\",lista[ii])\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// +++++++  PARA REVER\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t//ddd = frappe.get_doc(row.reference_doctype,row.reference_name)\n\t\t\t\t\t\t//console.log(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\tif (frm.doc.deductions.length !=0){\n\t\t\t\t\t\t\tif (fatura_total_retencao_na_fonte !=0){\n\t\t\t\t\t\t\t\t//uncheck allocate_payment_amount\n\t\t\t\t\t\t\t\t//if (retencao_supplier.retencao_na_fonte =='Retencao na fonte'){\n\t\t\t\t\t\t\t\tcur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t\t\t//cur_frm.set_value(\"allocate_payment_amount\", 0 )\n\t\t\t\t\t\t\t\tif(frm.doc.references.length > 1){\n\t\t\t\t\t\t\t\t\tpaidamount = paidamount + flt(row.outstanding_amount)  \t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte))\n\t\t\t\t\t\t\t\t\t//cur_frm.set_value(\"paid_amount\", cur_frm.doc.paid_amount + flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}else if (row.total_amount != row.outstanding_amount){\n\t\t\t\t\t\t\t\t\t//Already has 1/more payments done..\n\t\t\t\t\t\t\t\t\tvar totalimposto = 0;\n\t\t\t\t\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\t\t\t\t\ttotalimposto = row.amount\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tcur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(totalimposto) )\n\t\t\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tcur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//cur_frm.set_df_property(\"reference_no\",\"reqd\",true)\n\t\t\t\t\t\t\t\t//cur_frm.get_field('reference_no').df.reqd = true \n\t\t\t\t\t\t\t\t//row.allocated_amount = 1111111 //row.outstanding_amount\n\t\t\t\t\t\t\t\t//cur_frm.doc.paid_amount = flt(row.outstanding_amount) - flt(ddd.total_retencao_na_fonte)\n\t\t\t\t\t\t\t\t//}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// ++++++  PARA REVER\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (paidamount !=0) {cur_frm.set_value(\"paid_amount\", paidamount - flt(fatura_total_retencao_na_fonte))}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t\tconsole.log(company_costcenter)\n\t\t\t\t\t\tconsole.log(contab_conta_retencao.responseJSON.message[0].name)\n\t\t\t\t\t\t//if (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_ammount){\n\t\t\t\t\t\tif (cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_amount ) {\t\n\t\t\t\t\t\t\tconsole.log('adiciona RETENCAO')\n\t\t\t\t\t\t\tif (frm.doc.deductions ==0){\n\t\t\t\t\t\t\t\tvar c = frm.add_child(\"deductions\");\n\t\t\t\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34140000-I Industrial \n\t\t\t\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\t\t\t\tc.amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tif (fornecedor_retencao.readyState == 4 && fornecedor_retencao.responseText.length >2){\n\t\t\t\t\t\tconsole.log(fornecedor_retencao.responseJSON.message[0].retencao_na_fonte)\n\t\t\t\t\t\tconsole.log(frm.doctype)\n\t\t\t\t\t\tconsole.log(frm.docname)\n\t\t\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\t\t}else{\t\n\t\t\t\t\t\tfrappe.show_alert(\"Este Fornecedor/Cliente/Employee nao tem Retencao na Fonte!!!\")\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tif (cur_frm.doc.mode_of_payment == undefined) { valor_pago = 0}\t//Reset ao Valor\n\t\t\t\t}\t\t\t\n\t\t\t}\t\t\t\n\t\t\t\t\t\n\t\t}\t\n\t},\n\n\tunallocated_amount: function(frm,cdn,cdt){\n\t\tvar totalfactura = 0;\n\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\ttotalfactura = row.outstanding_amount\n\n\t\t})\n\t\tvar totalimposto = 0;\n\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\ttotalimposto = row.amount\n\n\t\t})\n\t\t\n\t\tif (cur_frm.doc.paid_amount - totalimposto == cur_frm.doc.difference_amount) {\n\t\t\t//frappe.model.set_value(cdt,cdn,'paid_amount',cur_frm.doc.difference_amount\t);  \n\t\t\t//cur_frm.doc.paid_amount = cur_frm.doc.difference_amount\t\n\t\t\t//frm.events.set_total_allocated_amount(frm);\n\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\tconsole.log('unallocated_amount')\n\t\t}\n\t\t\n\t\tif (cur_frm.doc.total_allocated_amount == 0 && cur_frm.doc.paid_amount != cur_frm.doc.total_allocated_amount && cur_frm.doc.unallocated_amount == 0){\n\t\t\t\tconsole.log('Percentargem do Imposto Unallocated Amount' );\n\t\t\t\tconsole.log((cur_frm.doc.paid_amount/totalfactura)*100 )\n\t\t\t\tvar percentagemPAGA = (cur_frm.doc.paid_amount/totalfactura)*100 \n\t\t\t\t//Valor do Imposto a ser pago com base na % calcaulada\n\t\t\t\tconsole.log((totalimposto*percentagemPAGA)/100)\n\t\t\t\tconsole.log(cur_frm.doc.paid_amount - (totalimposto*percentagemPAGA)/100)\n\t\t}\n\t\t\t\t\n\t},\n\t\n\treference_no: function(frm,cdn,cdt) {\n\t\t\n\t\tif (cur_frm.doc.payment_type == 'Pay' && frm.doc.deductions != undefined){ //||  cur_frm.doc.payment_type == 'Receive') {\n\t\t\tif (frm.doc.deductions.length !=0){\n\t\t\t\tconsole.log('tenta')\n\t\t\t\t//cur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\trow.allocated_amount = row.outstanding_amount\n\n\t\t\t\t})\n\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\tfrm.events.set_total_allocated_amount(frm);\n\t\t\t\tfrm.events.set_difference_amount(frm);\n\t\t\t}\t\n\n\t\t}else if (cur_frm.doc.payment_type == 'Receive' && frm.doc.deductions != undefined){\n\t\t\tif (frm.doc.deductions.length ==1){\n\t\t\t\t//Um pagmento singular\n\t\t\t\t\n\t\t\t\tconsole.log('tenta RECEIVE SINGULAR')\n\t\t\t\tvar tmp_outstanding_amount = 0\n\t\t\t\tvar tmp_amount = 0\n\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\n\t\t\t\t\ttmp_outstanding_amount = row.outstanding_amount\n\n\t\t\t\t})\n\t\t\t\t\n\n\t\t\t\t//cur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\tif (cur_frm.doc.paid_amount != row.outstanding_amount || cur_frm.doc.unallocated_amount == row.outstanding_amount){\n\t\t\t\t\t\trow.allocated_amount = row.outstanding_amount\n\t\t\t\t\t}else if (row.allocated_amount != valor_pago){\t\n\t\t\t\t\t\trow.allocated_amount = valor_pago //cur_frm.doc.paid_amount\n\t\t\t\t\t\t\n\t\t\t\t\t\t//tmp_outstanding_amount = row.outstanding_amount\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\t//cur_frm.doc.total_allocated_amount = valor_pago\n\t\t\t\tfrm.events.set_total_allocated_amount(frm);\n\t\t\t\tfrm.events.set_difference_amount(frm);\n\t\t\t\t\n\t\t\t\tif (cur_frm.doc.paid_amount != tmp_outstanding_amount && tmp_outstanding_amount != 0){\n\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttmp_amount = row.amount\n\t\t\t\t\t})\t\n\t\t\t\t\tif (tmp_outstanding_amount - tmp_amount != cur_frm.doc.paid_amount){\n\t\t\t\t\t\t//cur_frm.doc.paid_amount -= tmp_amount\n\t\t\t\t\t\tconsole.log('NO NEED to update PAID AMOUNT')\n\t\t\t\t\t\tif (cur_frm.doc.paid_amount - tmp_amount == cur_frm.doc.difference_amount) {\n\t\t\t\t\t\t\t//cur_frm.events.set_unallocated_amount(frm)\n\t\t\t\t\t\t\t//cur_frm.doc.paid_amount -= tmp_amount\n\t\t\t\t\t\t\t//frm.events.set_total_allocated_amount(frm);\n\t\t\t\t\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\t\t\t\t\tconsole.log('no')\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tconsole.log('Yes')\n\t\t\t\t\t\t\t//cur_frm.doc.paid_amount -= tmp_amount\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfrm.set_value(\"paid_amount\", cur_frm.doc.paid_amount - tmp_amount);\n\t\t\t\t\t\t\t//frm.events.set_total_allocated_amount(frm);\n\t\t\t\t\t\t\tif(frm.doc.payment_type == \"Receive\"){\n\t\t\t\t\t\t\t\tfrm.events.allocate_party_amount_against_ref_docs(frm, frm.doc.paid_amount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// frm.trigger(\"reset_received_amount\");\n\t\t\t\t\t\t\t//frm.events.set_paid_amount(frm);\n\t\t\t\t\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t}else if (frm.doc.deductions.length >1){ \t\n\t\t\t\t//many Invoices...\n\n\t\t\t\tconsole.log('tenta RECEIVE MULTIPLOS PAGAMENTOS')\n\t\t\t\tvar tmp_outstanding_amount = 0\n\t\t\t\tvar tmp_amount = 0\n\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\n\t\t\t\t\ttmp_outstanding_amount += row.outstanding_amount\n\n\t\t\t\t})\n\t\t\t\t\n\n\n\t\t\t\t\n\t\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t\t//cur_frm.doc.total_allocated_amount = valor_pago\n\t\t\t\tfrm.events.set_total_allocated_amount(frm);\n\t\t\t\tfrm.events.set_difference_amount(frm);\n\t\t\t\t\n\t\t\t\tif (cur_frm.doc.paid_amount != tmp_outstanding_amount && tmp_outstanding_amount != 0){\n\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttmp_amount = row.amount\n\t\t\t\t\t})\t\n\t\t\t\t\tif (tmp_outstanding_amount - tmp_amount != cur_frm.doc.paid_amount){\n\t\t\t\t\t\t//cur_frm.doc.paid_amount -= tmp_amount\n\t\t\t\t\t\tconsole.log('NO NEED to update PAID AMOUNT 1')\n\t\t\t\t\t\tif (cur_frm.doc.paid_amount - tmp_amount == cur_frm.doc.difference_amount) {\n\t\t\t\t\t\t\t//cur_frm.events.set_unallocated_amount(frm)\n\t\t\t\t\t\t\t//cur_frm.doc.paid_amount -= tmp_amount\n\t\t\t\t\t\t\t//frm.events.set_total_allocated_amount(frm);\n\t\t\t\t\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\t\t\t\t\tconsole.log('no')\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tconsole.log('Yes')\n\t\t\t\t\t\t\t//cur_frm.doc.paid_amount -= tmp_amount\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfrm.set_value(\"paid_amount\", cur_frm.doc.paid_amount - tmp_amount);\n\t\t\t\t\t\t\t//frm.events.set_total_allocated_amount(frm);\n\t\t\t\t\t\t\tif(frm.doc.payment_type == \"Receive\"){\n\t\t\t\t\t\t\t\tfrm.events.allocate_party_amount_against_ref_docs(frm, frm.doc.paid_amount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// frm.trigger(\"reset_received_amount\");\n\t\t\t\t\t\t\t//frm.events.set_paid_amount(frm);\n\t\t\t\t\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}else if (cur_frm.doc.paid_amount == tmp_outstanding_amount && tmp_outstanding_amount != 0){\t\n\t\t\t\t\t//Multiple Invoices to pay.\n//\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\t\n//\t\t\t\t\t\ttmp_amount += row.amount\n//\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t//Total amound deductions\n\t\t\t\t\tvar tmp_amount = frappe.utils.sum($.map(frm.doc.deductions || [],\n\t\t\t\t\t\t\t\tfunction(d) { return flt(d.amount) }));\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\tif (valor_pago == 0){\n\t\t\t\t\t\tvar totalfactura = 0;\n\t\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\t\ttotalfactura += row.outstanding_amount\n\n\t\t\t\t\t\t})\n\t\t\t\t\t\tvalor_pago = cur_frm.doc.paid_amount\n\t\t\t\t\t\tconsole.log((cur_frm.doc.paid_amount/totalfactura)*100 )\n\t\t\t\t\t\tvar percentagemPAGA = (cur_frm.doc.paid_amount/totalfactura)*100 \n\t\t\t\t\t\t//Valor do Imposto a ser pago com base na % calcaulada\n\t\t\t\t\t\tvar totalimposto = 0;\n\t\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\t\ttotalimposto += row.amount\n\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconsole.log((totalimposto*percentagemPAGA)/100)\n\t\t\t\t\t\tconsole.log(cur_frm.doc.paid_amount - (totalimposto*percentagemPAGA)/100)\n\n\t\t\t\t\t\t// add o valor allocated_amount\n\t\t\t\t\t\tvar novoTotalfactura = cur_frm.doc.paid_amount - (totalimposto*percentagemPAGA)/100\n\t\t//\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t//\t\t\t\t\trow.allocated_amount = novoTotalfactura\n\n\t\t//\t\t\t\t})\n\t//\t\t\t\t\tcur_frm.doc.paid_amount = novoTotalfactura\n\t\t\t\t\t\t\n\t\t\t\t\t\t//add o valor da deductions\n\t\t\t\t\t\tvar novoTotalImposto = (totalimposto*percentagemPAGA)/100\n\t\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\t\t//Tem que ser revisto ... isto caso os pagamentos forem iguais ou as Retencoes...\n\t\t\t\t\t\t\trow.amount = flt(novoTotalImposto/frm.doc.deductions.length)\n\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tfrm.events.set_total_allocated_amount(frm);\n\t\t\t\t\t\tfrm.events.set_difference_amount(frm);\n\t\t\t\t\t}else{\t\n\t\t\t\t\t\t$.each(frm.doc.deductions || [], function(i, row) {\n\t\t\t\t\t\t\ttmp_amount = row.amount \n\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (flt(cur_frm.doc.unallocated_amount - cur_frm.doc.paid_amount,2) == flt(tmp_amount,2)){ \t\t//(cur_frm.doc.unallocated_amount - cur_frm.doc.paid_amount ==  tmp_amount){\n\t\t\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\t\t\trow.allocated_amount = cur_frm.doc.unallocated_amount\n\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tfrm.events.set_total_allocated_amount(frm);\n\t\t\t\t\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\t\n\t\t\t\t\tif (tmp_outstanding_amount - tmp_amount != cur_frm.doc.paid_amount){\n\t\t\t\t\t\t//cur_frm.doc.paid_amount -= tmp_amount\n\t\t\t\t\t\tconsole.log('NO NEED to update PAID AMOUNT 2')\n\t\t\t\t\t\tif (cur_frm.doc.paid_amount - tmp_amount == cur_frm.doc.difference_amount) {\n\t\t\t\t\t\t\t//cur_frm.events.set_unallocated_amount(frm)\n\t\t\t\t\t\t\t//cur_frm.doc.paid_amount -= tmp_amount\n\t\t\t\t\t\t\t//frm.events.set_total_allocated_amount(frm);\n\t\t\t\t\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\t\t\t\t\tconsole.log('no')\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tconsole.log('Yes')\n\t\t\t\t\t\t\t//cur_frm.doc.paid_amount -= tmp_amount\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfrm.set_value(\"paid_amount\", cur_frm.doc.paid_amount - tmp_amount);\n\t\t\t\t\t\t\t//frm.events.set_total_allocated_amount(frm);\n\t\t\t\t\t\t\tif(frm.doc.payment_type == \"Receive\"){\n\t\t\t\t\t\t\t\tfrm.events.allocate_party_amount_against_ref_docs(frm, frm.doc.paid_amount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// frm.trigger(\"reset_received_amount\");\n\t\t\t\t\t\t\t//frm.events.set_paid_amount(frm);\n\t\t\t\t\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t//cur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\tif (cur_frm.doc.paid_amount != row.outstanding_amount || cur_frm.doc.unallocated_amount == row.outstanding_amount){\n\t\t\t\t\t\trow.allocated_amount = row.outstanding_amount\n\t\t\t\t\t\t//tmp_outstanding_amount = row.outstanding_amount\n\t\t\t\t\t}else if (row.allocated_amount != valor_pago){\t\n\t\t\t\t\t\trow.allocated_amount = valor_pago //cur_frm.doc.paid_amount\n\t\t\t\t\t\t\n\t\t\t\t\t\t//tmp_outstanding_amount = row.outstanding_amount\n\t\t\t\t\t}\n\n\t\t\t\t})\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n//\t\t\tcur_frm.doc.reference_date = frappe.datetime.nowdate()\t\t\t\n\t//\t\tconsole.log('tenta Receive')\n\t\t//\tcur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t\t//cur_frm.doc.reference_date = frappe.datetime.nowdate()\n\t\t\t//frm.events.set_total_allocated_amount(frm);\n\t\t\t//frm.events.set_difference_amount(frm);\n\t\t\t\n\t\t}\n\t\tfrm.refresh_fields('total_allocated_amount','unallocated_amount')\n\t\tfrm.refresh_fields()\n\t},\n\t\n\t//Need to check for Retencao na Fonte to Uncheck this\n\t\n\tvalidate: function(frm,cdn,cdt){\n\t\t\n\t\tif (cur_frm.doc.payment_type == 'Pay' && frm.doc.deductions != undefined){ // || cur_frm.doc.payment_type == 'Receive'){\n\t\t\tif(frm.doc.deductions.length != 0){\n\t\t\t\tif (!cur_frm.doc.reference_no){\n\t\t\t\t\t\n\t\t\t\t\tfrappe.msgprint(__(\"Cheque/Reference No\"));\n\t\t\t\t\t//cur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\trow.allocated_amount = row.outstanding_amount\n\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t//throw \"cannot create\";\n\t\t\t\t\tvalidate =false;\n\t\t\t\t}else{\n\t\t\t\t\t//cur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\trow.allocated_amount = row.outstanding_amount\n\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\t\n\t\t}else if (cur_frm.doc.payment_type == 'Receive' && frm.doc.deductions != undefined){\n\t\t\tif(frm.doc.deductions.length != 0){\n\t\t\t\tif (!cur_frm.doc.reference_no){\n\t\t\t\t\t\n\t\t\t\t\tfrappe.msgprint(__(\"Cheque/Reference No\"));\n\t\t\t\t\t//cur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\trow.allocated_amount = row.outstanding_amount\n\n\t\t\t\t\t})\n\n\t\t\t\t\t//throw \"cannot create\";\n\t\t\t\t\tvalidate =false;\n\t\t\t\t}else{\n\t\t\t\t\t//cur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t\t\t\tif (cur_frm.doc.total_allocated_amount != cur_frm.doc.paid_amount){\n\t\t\t\t\t\t\tconsole.log('Nao faz mais nada')\n\t\t\t\t\t}else{\n\t\t\t\t\t\n\t\t\t\t\t\t$.each(frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\t\trow.allocated_amount = row.outstanding_amount\n\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\t\n\t\t//\tif (!cur_frm.doc.reference_no){\n\t\t\t\t\n\t\t//\t\tfrappe.msgprint(__(\"Cheque/Reference No\"));\n\t\t//\t\tcur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t\t\t//throw \"cannot create\";\n\t\t//\t\tvalidate =false;\n\t\t//\t}else{\n\t\t//\t\tcur_frm.doc.references[0].allocated_amount = cur_frm.doc.references[0].outstanding_amount\n\t\t//\t}\n\t\t\t\n\t\t}//\n\t\tvar  lista = []\n\t\t\n\t},\n\n});\n\n\n\ncur_frm.cscript.allocated_amount = function(doc,cdt,cdn) {\n\t//alert(\"ALLOCATED AMOUNT\")\n\t//cur_frm.events.set_total_allocated_amount(cur_frm);\n\t//cur_frm.events.set_difference_amount(cur_frm);\n\tconsole.log('allocated_amount')\n\n}\n\n\nvar faturas_ = function(frm,cdt,cdn){\n\tcdt1 = undefined\n\tif (cdt1 == undefined) {cdt1 = cdt}\n\tif (cdt instanceof Array){\n\t\tii = 0\n\t\tfor (ii in cdt1){ \n\t\t\tconsole.log('xxxadfasdfasfsafasf')\n\t\t\tfrappe.model.with_doc(frm, cdt1[ii], function() { \n\t\t\t\tvar d = frappe.model.get_doc(frm, cdt1[ii])\n\t\t\t\tconsole.log('Facturas_')\n\t\t\t\tfatura_total_retencao_na_fonte += d.total_retencao_na_fonte\n\t\t\t\tconsole.log(fatura_total_retencao_na_fonte)\n\t\t\t\t\n\t\t\t\t//cur_frm.set_value(\"allocate_payment_amount\", 0 )\n\t\t\t\t//cur_frm.set_value(\"reference_no\", 0 )\n\t\t\t\t\n\t\t\t\t//var company_costcenter = frappe.get_doc(\":Company\", frm.doc.company).cost_center;\n\t\t\t\t//console.log(contab_conta_retencao.responseJSON.message[0].name)\n\t\t\t\tif (cur_frm.doc.party_type =='Supplier'){\n\t\t\t\t\tif (cur_frm.doc.deductions ==0){\n\t\t\t\t\t\tvar c = cur_frm.add_child(\"deductions\");\n\t\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34130000-I Industrial - Retencao A Liquidar\n\t\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\t\tc.amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcur_frm.doc.deductions[0].amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t}\n\t\t\t\t}else if (cur_frm.doc.party_type =='Employee'){\n\t\t\t\t\tconsole.log('Employee!!!!')\n\t\t\t\t}else{\n\t\t\t\t\tif (cur_frm.doc.deductions ==0){\n\t\t\t\t\t\t//Verify  Totalamount * Outstanding /100 return % left to be paid\n\t\t\t\t\t\t//before adding ....\n\t\t\t\t\t\tvar novo_fatura_total_retencao_na_fonte = 0\n\t\t\t\t\t\tvar valor_outstanding = 0\n\t\t\t\t\t\tvar valor_totalamount = 0\n\t\t\t\t\t\t$.each(cur_frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\t\tvalor_outstanding = row.outstanding_amount\n\t\t\t\t\t\t\tvalor_totalamount = row.total_amount\n\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconsole.log(valor_outstanding / valor_totalamount*100)\n\t\t\t\t\t\tconsole.log(fatura_total_retencao_na_fonte * (valor_outstanding / valor_totalamount*100))\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = cur_frm.add_child(\"deductions\");\n\t\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34140000-I Industrial Cliente a Liquidar\n\t\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\t\tif (valor_totalamount != valor_outstanding){\n\t\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte * ((valor_outstanding / valor_totalamount)*100)/100)\t\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte)\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if (cur_frm.doc.deductions == undefined){\n\t\t\t\t\t\tvar novo_fatura_total_retencao_na_fonte = 0\n\t\t\t\t\t\tvar valor_outstanding = 0\n\t\t\t\t\t\tvar valor_totalamount = 0\n\t\t\t\t\t\t$.each(cur_frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\t\tif (row.reference_name == cdt1[ii]) {\n\t\t\t\t\t\t\t\tvalor_outstanding = row.outstanding_amount\n\t\t\t\t\t\t\t\tvalor_totalamount = row.total_amount\n\t\t\t\t\t\t\t}\t\n\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconsole.log(valor_outstanding / valor_totalamount*100)\n\t\t\t\t\t\tconsole.log(fatura_total_retencao_na_fonte * (valor_outstanding / valor_totalamount*100))\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = cur_frm.add_child(\"deductions\");\n\t\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34140000-I Industrial Cliente a Liquidar\n\t\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\t\tif (valor_totalamount != valor_outstanding){\n\t\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte * ((valor_outstanding / valor_totalamount)*100)/100)\t\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tcur_frm.doc.deductions[0].amount = flt(fatura_total_retencao_na_fonte)\n\t\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t}\n\t\t\t});\t\n\t\t\t\n\t\t}\n\t}else{\t\n\t\tfrappe.model.with_doc(frm, cdt, function() { \n\t\t\tvar d = frappe.model.get_doc(frm,cdt)\n\t\t\tconsole.log('Facturas_')\n\t\t\t//Might not need to + due to the other Invoices....if multiple payments\n\t\t\t//fatura_total_retencao_na_fonte += d.total_retencao_na_fonte\n\t\t\tfatura_total_retencao_na_fonte = d.total_retencao_na_fonte\n\t\t\t\n\t\t\tconsole.log(fatura_total_retencao_na_fonte)\n\t\t\t\n\t\t\t//cur_frm.set_value(\"allocate_payment_amount\", 0 )\n\t\t\t//cur_frm.set_value(\"reference_no\", 0 )\n\t\t\t\n\t\t\t//var company_costcenter = frappe.get_doc(\":Company\", frm.doc.company).cost_center;\n\t\t\t//console.log(contab_conta_retencao.responseJSON.message[0].name)\n\t\t\tif (cur_frm.doc.party_type =='Supplier'){\n\t\t\t\tif (cur_frm.doc.deductions ==0){\n\t\t\t\t\tvar c = cur_frm.add_child(\"deductions\");\n\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34130000-I Industrial - Retencao A Liquidar\n\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\tc.amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t}else{\n\t\t\t\t\tcur_frm.doc.deductions[0].amount = flt(-fatura_total_retencao_na_fonte)\n\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t}\n\t\t\t}else if (cur_frm.doc.party_type =='Employee'){\n\t\t\t\tconsole.log('Employee!!!!')\n\t\t\t}else{\n\t\t\t\tif (cur_frm.doc.deductions ==0){\n\t\t\t\t\t//Verify  Totalamount * Outstanding /100 return % left to be paid\n\t\t\t\t\t//before adding ....\n\t\t\t\t\tvar novo_fatura_total_retencao_na_fonte = 0\n\t\t\t\t\tvar valor_outstanding = 0\n\t\t\t\t\tvar valor_totalamount = 0\n\t\t\t\t\t$.each(cur_frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\tvalor_outstanding = row.outstanding_amount\n\t\t\t\t\t\tvalor_totalamount = row.total_amount\n\n\t\t\t\t\t})\n\t\t\t\t\tconsole.log(valor_outstanding / valor_totalamount*100)\n\t\t\t\t\tconsole.log(fatura_total_retencao_na_fonte * (valor_outstanding / valor_totalamount*100))\n\t\t\t\t\t\n\t\t\t\t\tvar c = cur_frm.add_child(\"deductions\");\n\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34140000-I Industrial Cliente a Liquidar\n\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\tif (valor_totalamount != valor_outstanding){\n\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte * ((valor_outstanding / valor_totalamount)*100)/100)\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte)\n\t\t\t\t\t}\n\t\t\t\t}else if (cur_frm.doc.deductions == undefined){\n\t\t\t\t\tvar novo_fatura_total_retencao_na_fonte = 0\n\t\t\t\t\tvar valor_outstanding = 0\n\t\t\t\t\tvar valor_totalamount = 0\n\t\t\t\t\t$.each(cur_frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\tif (row.reference_name == cdt) {\n\t\t\t\t\t\t\tvalor_outstanding = row.outstanding_amount\n\t\t\t\t\t\t\tvalor_totalamount = row.total_amount\n\t\t\t\t\t\t}\t\n\n\t\t\t\t\t})\n\t\t\t\t\tconsole.log(valor_outstanding / valor_totalamount*100)\n\t\t\t\t\tconsole.log(fatura_total_retencao_na_fonte * (valor_outstanding / valor_totalamount*100))\n\t\t\t\t\t\n\t\t\t\t\tvar c = cur_frm.add_child(\"deductions\");\n\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34140000-I Industrial Cliente a Liquidar\n\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\tif (valor_totalamount != valor_outstanding){\n\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte * ((valor_outstanding / valor_totalamount)*100)/100)\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte)\n\t\t\t\t\t}\n\t\t\t\t}else if (cur_frm.doc.references.length >= 1) {\n\t\t\t\t\t//Mais que um pagamento de Facturas ....\n\t\t\t\t\tconsole.log('Mais que um pagamento de Facturas ....')\n\t\t\t\t\tvar novo_fatura_total_retencao_na_fonte = 0\n\t\t\t\t\tvar valor_outstanding = 0\n\t\t\t\t\tvar valor_totalamount = 0\n\t\t\t\t\t$.each(cur_frm.doc.references || [], function(i, row) {\n\t\t\t\t\t\tif (row.reference_name == cdt) {\n\t\t\t\t\t\t\tvalor_outstanding = row.outstanding_amount\n\t\t\t\t\t\t\tvalor_totalamount = row.total_amount\n\t\t\t\t\t\t}\t\n\n\t\t\t\t\t})\n\t\t\t\t\tconsole.log(valor_outstanding / valor_totalamount*100)\n\t\t\t\t\tconsole.log(fatura_total_retencao_na_fonte * (valor_outstanding / valor_totalamount*100))\n\t\t\t\t\t\n\t\t\t\t\tvar c = cur_frm.add_child(\"deductions\");\n\t\t\t\t\tc.account = contab_conta_retencao.responseJSON.message[0].name ; //34140000-I Industrial Cliente a Liquidar\n\t\t\t\t\tc.cost_center = company_costcenter\n\t\t\t\t\tif (valor_totalamount != valor_outstanding){\n\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte * ((valor_outstanding / valor_totalamount)*100)/100)\t\n\t\t\t\t\t}else{\n\t\t\t\t\t\tc.amount = flt(fatura_total_retencao_na_fonte)\n\t\t\t\t\t}\t\n\t\t\t\t\t\n\t\t\t\t}else{\n\n\t\t\t\t\tcur_frm.doc.deductions[0].amount = flt(fatura_total_retencao_na_fonte)\n\t\t\t\t//cur_frm.doc.allocate_payment_amount=0\n\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t\t//TESTE\n\t\t\tcur_frm.refresh_fields('deductions')\n\t\t});\t\n\t}\t\n\tcur_frm.events.set_difference_amount(cur_frm);\n\t//cur_frm.set_value(\"paid_amount\", flt(row.outstanding_amount) - flt(fatura_total_retencao_na_fonte) )\n\n\n\n\t\n\n}", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Fees", 
  "modified": "2017-11-01 14:40:31.805244", 
  "name": "Fees-Client", 
  "script": "// Copyright (c) 2017, HELKyds lda. and contributors\n// For license information, please see license.txt\n\n//escola_config = cur_frm.call({method:\"angola_erp.util.angola.get_escola_config\",args:{}})\n\nfrappe.ui.form.on(\"Fees\", {\n\n\tonload: function(frm) {\n\t\tif(frm.doc.__islocal) {\n\t\t\tconsole.log('Onload is local')\n\t\t\tconsole.log (frm.doc.name)\n\t\t\tconsole.log (frm.name)\n\t\t}else{\n\t\t\tconsole.log('Onload NAO local')\n\t\t\tconsole.log (frm.doc.name)\n\t\t\tconsole.log (frm.name)\n\t\t\t\n\t\t}\n\t\t\n\t},\n\t\n\trefresh: function(frm) {\n\t\tif (frm.doc.total_amount == undefined){\t\n\t\t\t//ERPNext V9\n\t\t\tif (frm.doc.docstatus === 1 && (frm.doc.grand_total > frm.doc.paid_amount)) {\n\t\t\t\tfrm.clear_custom_buttons()\t//Clear the existing one .. so ours can be added.\n\t\t\t\tfrm.add_custom_button(__(\"Collect Fees\"), function() {\n\t\t\t\t\t\n\t\t\t\t\tcur_frm.reload_doc()\n\t\t\t\t\tfrappe.route_options = {\"propina\": cur_frm.doc.name, \"customer\":cur_frm.doc.student_name}\n\t\t\t\t\tfrappe.set_route(\"List\", \"Sales Invoice\");\n\t\t\t\t});\n\t\t\t}else if (frm.doc.docstatus === 1 && (frm.doc.grand_total == frm.doc.paid_amount)) {\n\t\t\t\tfrm.clear_custom_buttons()\t//Clear the existing one .. so ours can be added.\n\t\t\t\tfrm.add_custom_button((cur_frm.doc.sales_invoice), function() {\n\t\t\t\t\t\n\t\t\t\t\tcur_frm.reload_doc()\n\t\t\t\t\t//frappe.route_options = {\"name\": cur_frm.doc.sales_invoice, \"customer\":cur_frm.doc.student_name}\n\t\t\t\t\tfrappe.set_route(\"Form\", \"Sales Invoice\",cur_frm.doc.sales_invoice);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}else{\n\t\t\tif (frm.doc.docstatus === 1 && (frm.doc.total_amount > frm.doc.paid_amount)) {\n\t\t\t\tfrm.clear_custom_buttons()\t//Clear the existing one .. so ours can be added.\n\t\t\t\tfrm.add_custom_button(__(\"Collect Fees\"), function() {\n\t\t\t\t\t\n\t\t\t\t\tcur_frm.reload_doc()\n\t\t\t\t\tfrappe.route_options = {\"propina\": cur_frm.doc.name, \"customer\":cur_frm.doc.student_name}\n\t\t\t\t\tfrappe.set_route(\"List\", \"Sales Invoice\");\n\t\t\t\t});\n\t\t\t}else if (frm.doc.docstatus === 1 && (frm.doc.total_amount == frm.doc.paid_amount)) {\n\t\t\t\tfrm.clear_custom_buttons()\t//Clear the existing one .. so ours can be added.\n\t\t\t\tfrm.add_custom_button((cur_frm.doc.sales_invoice), function() {\n\t\t\t\t\t\n\t\t\t\t\tcur_frm.reload_doc()\n\t\t\t\t\t//frappe.route_options = {\"name\": cur_frm.doc.sales_invoice, \"customer\":cur_frm.doc.student_name}\n\t\t\t\t\tfrappe.set_route(\"Form\", \"Sales Invoice\",cur_frm.doc.sales_invoice);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t\tif (cur_frm.doc.sales_invoice){\n\t\t\t\tcur_frm.set_df_property(\"sales_invoice\",\"hidden\",false)\n\t\t}\t\n\t},\t\n\t\n});\t\n\nfrappe.ui.form.on(\"Fees\",\"student\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn];\n\n\tconsole.log ('aluno ', cur_frm.doc.student)\n\t\n\tconsole.log(d.student !=\"\")\n\t\n\tif (d.student != undefined){\n\t\t\n\t\tvar ret \t\n\t\tservicos_('Student',d.student)\n\t\t\n\t\tcur_frm.fields_dict.program_enrollment.get_query = function(doc){\n\t\t\treturn{\n\t\t\t\tfilters:{\n\t\t\t\t\t\"student\":cur_frm.doc.student,\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t\t\n\t\tfrappe.call({\n\t\t\t'async': false,\n\t\t\t'method': 'angola_erp.util.angola.get_programa_enroll',\n\t\t\t'args':{\n\t\t\t\t'aluno': cur_frm.doc.student,\n\t\t\t},\n\t\t\t'callback': function(res){\n\t\t\t\tret = res.message;\n\t\t\t\tconsole.log (ret)\n\t\t\t\tfrappe.model.set_value(cdt,cdn,'program_enrollment', ret[0].parent)\n\t\t\t\tfrappe.model.set_value(cdt,cdn,'fee_structure', ret[0].fee_structure)\n\t\t\t\tfrappe.model.set_value(cdt,cdn,'program', ret[0].program)\n\n\t\t\t\tcur_frm.fields_dict.program.get_query = function(doc){\n\t\t\t\t\treturn{\n\t\t\t\t\t\tfilters:{\n\t\t\t\t\t\t\t\"program_name\":ret[0].program,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t}\n\t\t});\n\t\t//if (!cur_frm.doc.referente_ao_mes){\n\t\tfrappe.model.set_value(cdt,cdn,'referente_ao_mes', cur_frm.fields_dict['referente_ao_mes'].$input[0].options[cint(moment().month(frappe.datetime.get_today()).format(\"M\"))].value)\n\t\t\n\t\t//}\n\t\t//console.log(cur_frm.doc.referente_ao_mes)\n\t\t//servicos_('Program Enrollment',d.student)\n\t}\n\t\n});\n\n//FUNCOES PARA CALCULOSdoc\n\nvar servicos_ = function(frm,cdt,cdn){\n\tfrappe.model.with_doc(frm, cdt, function() { \n\t\tvar d = frappe.model.get_doc(frm,cdt)\n\t\tconsole.log (d)\n\t\t//frappe.model.set_value(cdt,cdn,\"produtos_preco\"}),d.standard_rate)\n\t\tcur_frm.refresh_fields()\n\n\n\t});\n}\n\n\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Student Group", 
  "modified": "2017-11-01 18:17:02.977609", 
  "name": "Student Group-Client", 
  "script": "// Copyright (c) 2017, HELKyds lda. and contributors\n// For license information, please see license.txt\n\nescola_ginasio = cur_frm.call({method:\"angola_erp.util.angola.get_escola_ginasio\",args:{}})\n\nfrappe.ui.form.on(\"Student Group\", {\n\n\tonload: function(frm){\n\t\tconsole.log('STUDENT GROUP')\n\t\tconsole.log(escola_ginasio.responseJSON.message)\n\t\tif (escola_ginasio.readyState == 1){\n\t\t\tfrappe.call({\n\t\t\t\tasync: true,\n\t\t\t\tmethod:\"angola_erp.util.angola.get_escola_ginasio\",\n\t\t\t\targs:{},\n\t\t\t\tcallback: function(r){\n\t\t\t\t\tif (r.message){\n\t\t\t\t\t\tescola_ginasio.readyState = r.message;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\t\n\t},\t\n\n\trefresh: function(frm) {\n\t\tif (escola_ginasio.readyState != 1){\n\t\t\tif (escola_ginasio.responseJSON.message == 'Ginasio'){\n\t\t\t\tif (!frm.doc.__islocal) {\n\t\t\t\t\tfrm.clear_custom_buttons()\t//Clear the existing one... NOT ALL BUTTONS\n\t\t\t\t\tfrm.add_custom_button(__(\"Update Email Group\"), function() {\n\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\tmethod: \"angola_erp.util.angola.update_email_group\",\n\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\"doctype\": \"Student Group\",\n\t\t\t\t\t\t\t\t\"name\": frm.doc.name\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tfrm.add_custom_button(__(\"Attendance\"), function() {\n\t\t\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\t\tbased_on: \"Student Group\",\n\t\t\t\t\t\t\tstudent_group: frm.doc.name\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrappe.set_route(\"List\", \"Student Attendance Tool\");\n\t\t\t\t\t});\n\t\t\t\t\tfrm.add_custom_button(__(\"Course Schedule\"), function() {\n\t\t\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\t\tstudent_group: frm.doc.name\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrappe.set_route(\"List\", \"Course Schedule\");\n\t\t\t\t\t});\n\t\t\t\t\tfrm.add_custom_button(__(\"Assessment Plan\"), function() {\n\t\t\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\t\tstudent_group: frm.doc.name\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrappe.set_route(\"List\", \"Assessment Plan\");\n\t\t\t\t\t});\n\t\t\t\t\tfrm.add_custom_button(__(\"Newsletter\"), function() {\n\t\t\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\t\t\"Newsletter Email Group.email_group\": frm.doc.name\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrappe.set_route(\"List\", \"Newsletter\");\n\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t}\t\n\t},\n\n});\n\t", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Event", 
  "modified": "2017-11-10 14:14:39.006641", 
  "name": "Event-Client", 
  "script": "frappe.ui.form.on(\"Event\", {\n\tonload: function(frm){\n\t\tconsole.log ('event load')\n\t\tvar head = document.getElementsByTagName('head')[0];\n\t\tvar script = document.createElement('script');\n\t\tscript.src = 'assets/js/ouical.js?reload=' + new Date().getTime();\n\t\tscript.type = 'text/javascript';\n\t\thead.appendChild(script);\n\t\t// <script type=\"text/javascript\" src=\"/assets/js/ouical.js?ver={{ build_version }}\"></script>\n\n\t},\n\tvalidate: function(frm){\n\t\tconsole.log('aaaaa')\n\t\tempresa = frappe.defaults.get_user_default('company');\n\t\tfimdata = new Date(cur_frm.doc.starts_on);\n\t\tfimdata.setMinutes(60);\n\t\tif (cur_frm.doc.ends_on){\n\t\t\tfimdata = cur_frm.doc.ends_on\n\t\t}\n\t\tvar myCalendar = createCalendar({\n\t\t  options: {\n\t\t\tclass: 'my-class',\n\t\t\t\n\t\t\t// You can pass an ID. If you don't, one will be generated for you\n\t\t\tid: 'my-id'\n\t\t  },\n\t\t  data: {\n\t\t\t// Event title\n\t\t\ttitle: cur_frm.doc.subject,\n\n\t\t\t// Event start date\n\t\t\tstart: new Date (cur_frm.doc.starts_on),\n\t\t\t// start: new Date('June 15, 2013 19:00'),\n\t\t\t\n\t\t\t// Event duration (IN MINUTES)\n\t\t\tduration: 60,\n\n\t\t\t// You can also choose to set an end time\n\t\t\t// If an end time is set, this will take precedence over duration\n\t\t\t//if (cur_frm.doc.ends_on){\n\t\t\tend: new Date (fimdata),     \n\t\t\t//}\n\n\t\t\t// Event Address\n\t\t\taddress: empresa,\n\n\t\t\t// Event Description\n\t\t\tdescription: cur_frm.doc.description\n\t\t  }\n\t\t});\n\n\t\t//document.querySelector('#place-where-I-want-this-calendar').appendChild(myCalendar);\n\t\tfrm.set_value('description', frm.doc.description  + '<hr>' + myCalendar.innerHTML)\n\t\t//frm.doc.description = frm.doc.description  + '\\n' + myCalendar\n\t\tfrm.refresh_fields()\t\n\n\t}\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Auto Email Report", 
  "modified": "2017-12-06 17:41:03.055739", 
  "name": "Auto Email Report-Client", 
  "script": "frappe.ui.form.on(\"Auto Email Report\", {\n\n\trefresh: function(frm) {\n\t\tconsole.log('Auto Email Report - REFRESH')\t\n\t\tvar filters = JSON.parse(frm.doc.filters || '{}');\n\t\tconsole.log ('FILTROS')\n\t\tif (!filters.from_date){\n\t\t\t//add dates\n\t\t\tconsole.log('datas')\n\t\t\tdata_ini = {\"from_date\":frappe.datetime.nowdate()}\n\t\t\tdata_fim = {\"to_date\":frappe.datetime.nowdate()} \n\t\t\tconsole.log($.extend(true, filters, data_ini, data_fim))\n\t\t\tfrm.set_value('filters', JSON.stringify($.extend(true, filters, data_ini, data_fim)));\n\t\t\tfrm.save()\n\t\t\tfrm.reload\n\t\t}else if (filters.from_date != frappe.datetime.nowdate()){\n\t\t\tconsole.log('xxxxxxx')\n\t\t\tconsole.log(frm.doc.report)\n\t\t\tif (frm.doc.report == 'Registo de Vendas'){\n\t\t\t\tdata_ini = {\"from_date\":frappe.datetime.nowdate()}\n\t\t\t\tdata_fim = {\"to_date\":frappe.datetime.nowdate()} \n\t\t\t\tconsole.log($.extend(true, filters, data_ini, data_fim))\n\t\t\t\tfrm.set_value('filters', JSON.stringify($.extend(true, filters, data_ini, data_fim)));\n\t\t\t\tfrm.save()\n\t\t\t\tfrm.reload\n\n\t\t\t}\n\t\t}\n\t\tconsole.log (filters)\n\t\tvar report_filters = frappe.query_reports[frm.doc.report].filters;\n\t\tif(report_filters && report_filters.length > 0) {\n\t\t\t//frm.set_value('filter_meta', JSON.stringify(report_filters));\n\t\t\tconsole.log(frm.doc.filter_meta)\n\t\t}\n\t\t\n\n\t}\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Payroll Entry", 
  "modified": "2018-10-24 13:58:16.216765", 
  "name": "Payroll Entry-Client", 
  "script": "//HELKYDS @2018 - Payroll Entry\n//Para processar as Faltas, processar os Salarios e o SalarioIliquido\n//Date changed: 24/10/2018\nnumero_faltas = \"\";\nsaliliquido = 0;\n\nfrappe.ui.form.on(\"Payroll Entry\", \"before_submit\", function(frm, cdt, cdn) {\n   // your code\n\tconsole.log(\"ANTES\")\n\tconsole.log(\"ANTESssssssssss\")\n\t\n\tconsole.log('Processa Faltas .....')\n\t\n\tfrappe.call({\n\t\tmethod:\"angola_erp.angola_erpnext.validations.irt.set_faltas\",\n\t\targs:{\n\t\t\t\"mes\":moment(cur_frm.doc.start_date).month()+1, \n\t\t\t\"ano\":moment(cur_frm.doc.start_date).year(), \n\t\t\t\"empresa\":cur_frm.doc.company,\n\t\t},\n\t\tcallback: function(r1,rt1) {\n\t\t\t\tif (r1.message){\n\t\t\t\t\t//cur_frm.cscript.display_activity_log(\"Faltas processadas...\");\n\t\t\t\t\tfrappe.show_alert(\"Faltas processadas...\");\t\n\t\t\t\t\t\n\t\t\t\t\t//cur_frm.cscript.display_activity_log(\"Processando Salarios... Aguarde.\");\n\t\t\t\t\t\n\t\t\t\t\tvar callback = function(r, rt){\n\t\t\t\t\t\tif (r.message)\n\t\t\t\t\t\t\t//cur_frm.cscript.display_activity_log(r.message);\n\t\t\t\t\t\t\tconsole.log(\"Process Salario\")\n\t\t\t\t\t\t\tconsole.log(r.message);\n\t\t\t\t\t\t\t//frappe.model.set_value(cdt,cdn,'processa_salario',1);  \n\n\t\t\t\t\t\t\n\t\t\t\t\t}\n//\t\t\t\t\tif (numero_faltas != \"\"){ console.log('TERMINOU processar Faltas.....')}\n\t\t\t\t\t//console.log('Cria os Salarios.....')\n\t\t\t\t\t//return $c('runserverobj', args={'method':'create_salary_slips','docs':doc},callback);\n\t\t\t\t\tfrappe.show_alert(\"Antes de Submeter o Sal\u00e1rio fa\u00e7a uma Revis\u00e3o/Aprova\u00e7\u00e3o.\")\n\t\t\t\t\t\n\t\t\t\t}\t\n\t\t}\n\t\t\t\n\t});\n});\n\n\nfrappe.ui.form.on('Payroll Entry', {\n\n\tonload: function(frm) {\n\t\t\tconsole.log('LOAD');\n\t\t\tsaliliquido = 0;\n\t},\n\t\n\trefresh: function(frm) {\n\t\tif (frm.doc.docstatus == 1) {\n\t\t\tif (frm.custom_buttons){ \n\t\t\t\tif (!frm.custom_buttons['Bank Entry'] ) {\n\t\t\t\t\t\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: 'erpnext.hr.doctype.payroll_entry.payroll_entry.payroll_entry_has_bank_entries',\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t'name': frm.doc.name\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tconsole.log('VERIFICA BANK ENTRY!!!!')\n\t\t\t\t\t\t\tif (r.message && !r.message.submitted) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfrm.clear_custom_buttons();\n\t\t\t\t\t\t\t\tfrm.add_custom_button(__(\"View Salary Slips\"),\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\tfrappe.set_route(\n\t\t\t\t\t\t\t\t\t\t\t'List', 'Salary Slip', {posting_date: frm.doc.posting_date}\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tfrm.add_custom_button(__(\"Salary Review\"),\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\tfrappe.route_options = {\n\t\t\t\t\t\t\t\t\t// \t\t\"start_date\": moment(cur_frm.doc.start_date,\"dd-MM-YYYY\"),\n\t\t\t\t\t\t\t\t\t// \t\t\"end_date\": moment(cur_frm.doc.end_date,\"dd-MM-YYYY\")\n\t\t\t\t\t\t\t\t\t\t\t\"date_range\": [cur_frm.doc.start_date,cur_frm.doc.end_date]\n\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tfrappe.set_route('query-report', 'Salary Review');\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfrm.add_custom_button(__(\"Submit Salary Slip\"),\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t//submit_salary_slip(frm);\n\t\t\t\t\t\t\t\t\t\tfrappe.confirm(__('This will submit Salary Slips and create accrual Journal Entry. Do you want to proceed?'),\n\t\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\t\t\t\t\t\t//method: 'submit_salary_slips',\n\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: \"angola_erp.angola_erpnext.validations.payroll_entry.submit_salary_slips\",\n\t\t\t\t\t\t\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"doc\":cur_frm.doc,\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfrm.events.refresh(frm);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfrappe.show_alert('Submitting Salary Slips and creating Journal Entry...',1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t//doc: frm.doc,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfreeze_message: 'Submitting Salary Slips and creating Journal Entry...'\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\t\tif(frappe.dom.freeze_count) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfrappe.dom.unfreeze();\n\t\t\t\t\t\t\t\t\t\t\t\t\tfrm.events.refresh(frm);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t).addClass(\"btn-primary\");\n\n\t\t\t\t\t\t\t\t//alert(\"VAMOS fazer o Sal Iliquido\")\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t\n\n\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Bank Entry por fazer');\n\t\t\t\t\tif (frm.doc.docstatus == 1) {\n\t\t\t\t\t\tif (frm.custom_buttons) frm.clear_custom_buttons();\n\t\t\t\t\t\tfrm.events.add_context_buttons(frm);\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t\tif (saliliquido ==0) {\n\t\t\t\t\tconsole.log('VAMOS fazer o Sal Iliquido')\t\t\t\t\t\n\t\t\t\t\tsaliliquido = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.salary_slip.proc_salario_iliquido\",args:{\"mes\":moment(cur_frm.doc.start_date).month()+1, \"ano\":moment(cur_frm.doc.start_date).year(), \"empresa\":cur_frm.doc.company}}) \n\t\t\t\t}\n\n\t\t\t};\t\n\n\t\t}\n\t},\n});", 
  "script_type": "Client"
 }
]